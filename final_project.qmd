---
title: "Final Project"
subtitle: "Stat 184"
author: "Shania, Sree, and Lauren"
date: "May 7, 2025"
date-modified: now
format:
  pdf:
    toc: false
    code-fold: true
    code-link: true
    number-sections: true
    number-depth: 5
    fig-align: center
    cap-location: top
    geometry: 
      - top = 1in
      - left = 1in
      - right = 1in
      - bottom = 1in
    colorlinks: true
execute: 
  echo: false
  output: true
  warning: false
code-appendix: true
---
## Introduction

Sree is responsible for all narrative text. Shania is responsible for the README and Visualization One - Line Plot of Happiness Score over time between the Top Five and Bottom Five Countries. Lauren is responsible for all other code except for Visualization One.

The World Happiness Report is a landmark global survey that measures and ranks the happiness levels of nations, providing valuable insights into the well-being of populations worldwide. By analyzing factors such as GDP per capita, birth rate, freedom, people with access to resources like the internet, and perceptions of corruption, the report offers a comprehensive understanding of what contributes to a fulfilling life. Happiness, as a metric, goes beyond economic indicators to encompass emotional and social dimensions, making it a crucial tool for policymakers and researchers. However, happiness is a multifaceted concept that cannot be fully captured by a single measure, requiring a deeper examinations of cultural, environmental, and individual factors to truly understand what makes societies thrive and happy.

The purpose of this project is to explore the World Happiness Index and see what qualities of a country has an impact on its happiness rate. 

In this project, we aim to explore two core research questions:

1.  Does time have an effect on the happiness rate? (i.e. do the "happiest" countries tend to stay happy even after a certain number of years and do the "saddest" countries tend to stay sad even after a certain number of years?). And does the region of the country play a role in this?
2.  How does the birth rate in the data set correlate with its reported happiness levels? Are there any underlying socioeconomic factors that might explain the relationship?

These questions explore gaps in how happiness persists over time and connects to demographic shifts like birth rates. The findings could inform policy decisions, highlighting the role of stability and population dynamics in well-being. The project aims to provide actionable insights that deepen the understanding of global happiness patterns.

## Data Provenance

For the purpose of this project, we used two datasets to explore the happiness rates across regions and also to explore the factors that could've had an impact on the happiness of the regions such as GDP. These datasets were found via reliable sources online and have gone through rigorous wrangling and tidying to result in a trustworthy final dataset for this project.

#### Primary Dataset

-   Source: Kaggle

-   Collected By: A collaboration between Gallup, The University of Oxford's Wellbeing Research Centre, and the UN Sustainable Development Solutions Network

-   Description: This dataset contains happiness rankings and scores for over 150 countries from the years of 2015 to 2019 with metrics such as GDP per capita, social support, birth rate, freedom and corruption. It includes approximately over 150 rows which represent the countries and over 10 columns that represent the factors related to these countries.

-   Purpose: This dataset is used to analyze the global well-being trends, to quantify drivers of happiness, and to provide evidence-based insights.

-   Cases: Each row represents a country, with the columns giving details about its happiness score and other contributing factors.

#### Secondary Dataset

-   Source: Kaggle

-   Collected By: World Bank Group

-   Description: This dataset contains information about factors such as economic, social, political, and environmental indicators for approximately over 260 countries from the years of 1960 to 2022. It has approximately 268 rows which represents the countries and 48 columns with numerical values for factors including GDP, birth rates, energy consumption, etc.

-   Purpose: The World Bank Group collected this data to help policymakers and the public understand the state of devlopment in order to set benchmarks, identify effective actions, and monitor progress towards targets of reducing poverty. We are using this secondary dataset is used to provide additional supprt to our initial goal of analyzing the global factors that can have an impact on a regions happiness score.

-   Cases: Each row represents a country, with the columns giving economic, social, environmental, and governance details about the region.

#### Data Wrangling

To help us answer our research questions, we integrated the data from the primary and secondary datasets into a single dataset.

**Merging:**

-   The datasets were merged using the countries from both the primary and secondary datasets.

-   By merging the datasets, we filtered out countries absent in the primary datatset, streamlining comparisons across regions present in both datasets.

**Variable Selection:**

-   We retained most of the variables from the world happiness report. The Country feature is the name of the country. The Region feature is the region the country belongs to. The Happiness Rank is the rank of the country based on the Happiness Score. The Happiness Score is an averaged score from all sampled people, in a Gallup poll, when asked "How would you rate your happiness on a scale of zero to ten, where ten is the happiest." This is meant to make individuals imagine a ladder where the best possible life is the top rung of the ladder, ten, and the worst possible life is the bottom rung of the ladder, zero. This is called a "Cantril ladder," which is a subjective measure of happiness as an individual self-anchors their ladder based on their persepctive. If two people have had radically different life experiences, then their "ladders" of happiness will have radically different rungs. Economy (GDP per Captia) is the extent to which GDP contributes to the calculation of the Happiness Score. This means, for each country, when there is a change in GDP, how much does that affect the Happiness Score. Family or Social Support is the extent to which the support of family and friends contributes to the calculation of the Happiness Score. (In the data from earlier years, this was called Family, but in later years was renamed to Social Support, however they measure the same thing over the years). This means, for each country, when there is a change in a person's support system, how much does that affect the Happiness Score. Health (Life Expectancy) is the extent to which the life expectancy of inviduals in the country contributes to the calculation of the Happiness Score. This means, for each country, when there is a change in the average life expectancy, how much does that affect the Happiness Score. Freedom is the extent to which the perception of freedoms contributes to the calculation of the Happiness Score. This means, for each country, when there is a change in the perception of freedoms, how much does that affect the Happiness Score. Trust (Government Corruption) is the extent to which the perception of corruption contributes to the calculation of the Happiness Score. This means, for each country, when there is a change in the perception of corruption in the government, how much does that affect the Happiness Score. Generosity is the extent to which the perception of generosity contributes to the calculation of the Happiness Score. This means, for each country, when there is a change in the perception of generosity, how much does that affect the Happiness Score. Dystopia Residual is the extent to which the perception of the dystopia residual contributes to the calculation of the Happiness Score. This means, for each country, when there is a change in the dystopia residual, how much does that affect the Happiness Score. Dystopia represents an imaginary country with the world's least happy people. This establishes a benchmark, as no country will perform worse than dystopia, to compare all other countries aganist.

-   In the world bank world development indicators data set, we retained country, year, access to electricity, individuals using the internet, and birth rate. Country refers to name of the country. We derived year from the date feature, which had the year, month, and day. The year refers to the year the data was collected. Access to electricity refers to the percentage of the population that has access to electricity from zero percent to one hundred precent. Individuals using the internet refers to the percentage of the population using the internet from zero percent to one hundred percent. The birth rate refers to the birth rate per one thousand people. 

- Our analysis will focus on happiness score and region from the world happiness report. In the world bank data set, we will focus on access to electricity, individuals using the internet, and birth rate. We will be using country and year from both data sets. 

-   We retained variables that will be necessary for answering our research questions such as birth rate, happiness score, etc.

-   Unnecessary columns such as rule of law, agricultural land percent, forest land percent, etc. have been dropped to make the datasets more clear and concise.

**Filtering and Cleaning:**

-   Columns that were missing information in the secondary dataset were excluded to ensure that there was no bias within countries by excluding certain factors for some and including those influential factors for other regions.


### FAIR AND CARE Principles:

The datasets used in this report adhere to the FAIR & CARE principles, highlighting the availability and the eithics of the data:

## FAIR

**F- FINDABLE:**

- Both the primary and secondary datasets can be found on Kaggle, which is a platform where people can find and publish datasets in a clear location.

**A- ACCESSIBLE:**

- Both datasets are accessible through Kaggle, allowing anyone to download and use the data at their leisure.

**I- INTEROPERABLE:**

- Both datasets are in the form of .csv files, making the data compatible with many tools and platforms like R-Studio. 

**R- REUSABLE:**

- Both datasets include metadata and documentation that supports this.

- Through our data wrangling process, we changed the column name referring to family/social to social support. We also accounted for any data not measured as null. By doing so, we cleaned up the structure making it easier for future use.

## CARE

**C- COLLECTIVE BENEFIT:**

- Although neither dataset involves specific communities, these are each meant to improve the global understanding of happiness and well-being.

**A- AUTHORITY TO CONTROL:**

- Data is collected at the country level and so, has no concerns surrounding individual control.

- Even though a country a person belongs to could appear high on the Happiness Score, it does not represent a specific individuals' experience in that country.

**R- RESPONSIBILITY:**

- The datasets are open to use, yet there are no warnings for use or misuse.

**E - ETHICS:**

- The data in both sets were collected ethically through international surveys. However, we cannot make an assumption that individuals consented to this information being public. 

### Exploratory Data Analysis (EDA)

To uncover patterns in global well-being and address our research question, we conducted a comprehensive Exploratory Data Analysis (EDA) on both the World Happiness Index and World Bank datasets. This involved generating summary statistics and examining distributions of key variables across regions and development indicators. 

```{r}
# Code Style Guide - The Tidyverse Style Guide
# Import all necessary libraries for the entire qmd file
# Enforce Tidyverse Style Guide using library styler and style active file
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
library(ggplot2)
library(janitor)
library(styler) # importing necessary libraries
#styler:::style_active_file() # un comment and run when want to enforce
# Tidyverse Style Guide
```

### World Happiness Index Data Wrangling and EDA

World Happiness Index Data [^1]

[^1]: "World Happiness Report." www.kaggle.com, www.kaggle.com/datasets/unsdsn/world-happiness.

We are using EDA for analysis of both data sets initially as we are hoping to generate hypotheses and research questions from these visualizations and we are analyzing each visualization after we have created them. Also, we are asking general questions like the general distribution of each variable or plotting each variable in the world bank data set we are using against the happiness score to see what unexpected insights we gain. Moreover, we are attempting to build a data story, as we have descriptive statistics, visualizations, and narrative text. We are using descriptive statistics as opposed to inferential statistics, as we are not inferring values outside of the data range or predictions from a model of the data. 

In our coding, we use Tidyverse more than we use base R. We feel more confident with Tidyverse and that we think of functions from Tidyverse before we think of functions from base R. Also, we need to complete a lot of data wrangling and tidyverse has a lot of packages that are useful. 

We are reading in files remotely, from github, as opposed to locally. We chose to read in data from github to fully utilize and be immersed in using github. Moreover, this method does not require another person who wants to run our QMD file to download our data sets to their local device, taking up valuable storage space.

@tbl-summaryvariablesworldhappiness provides the summary statistics for the Happiness Index dataset, highlighting central tendencies and variability across nine key metrics. 
```{r}
## World Happiness Index Data Wrangling and EDA


# Goal: Tidy the world happiness data so each year is integrated into one
# data set. The resulting case is the happiness score for a country in a
# specific year. Then complete EDA analysis by creating summary tables of
# each feature and grouped by region.

# Polishing: We removed a summary table of each feature by region, as this
# was an overwhelming amount of information and did not lead to useful
# insights into our data.

# Need: all of the separate world happiness data csv (2015, 2016, 2017, 2018,
# and 2019)

# Plan
# 1a. Read in all of the individual data sets (2015, 2016, 2017, 2018, and
# 2019) from our github repository
# 2a. Tidy 2015 data
# 2b. Remove standard error column as only appear in 2015 data and no other
# analogs in the other data sets
# 2c. Add in year column so when merge all data sets together, know this data
# came from 2015
# 3a. Tidy 2016 data
# 3b. Remove confidence interval columns as only appear in 2016 data and no
# other analogs in the other data sets
# 3c. Add in year column so when merge all data sets together, know this data
# came from 2016
# 4a. Tidy 2017 data
# 4b. Remove whisker columns as only appear in 2017 data and no other analogs
# in the other data sets
# 4c. Add in year column so when merge all data sets together, know this data
# came from 2017
# 5a. Tidy 2018 data
# 5b. Rename columns in 2018 data so match with names of columns in 2015,
# 2016, and 2017 data
# 5c. Ensure government corruption treated as numeric, since numeric in all
# other data sets
# 5c. Add in year column so when merge all data sets together, know this data
# came from 2018
# 6a. Tidy 2019 data
# 6b. Rename columns in 2019 data so match with names of columns in 2015,
# 2016, 2017, and 2018 data
# 6c. Add in year column so when merge all data sets together, know this data
# came from 2019
# 7a. Merge all tidied year data by adding the rows of each data set into a
# total years data frame
# 8a. Merge total years data with 2015 data by matching Country column
# 9a. Add Region column to total data merged with data from 2015. First, add
# regions already known for countries in 2015 and 2016. Then, add in regions
# for the countries  in other years that match the countries from the 2015
# data set.
# 10a. Merge total years data with 2016 data by matching Country column
# 11a. Add Region column to total data merged with data from 2016. First,
# add regions already known for countries in 2015 and 2016. Then, add in
# regions for the countries  in other years that match the countries from
# the 2016 data set.
# 11b. Add new region data to final total data set
# 12a. Tidy final total data set
# 12b. Rename Family column to support system as this encompasses family and
# friends as social support
# 13a. Create a summary table based on each feature in the data set
# 13b. Summarize across the numeric columns in the total data set
# 13c. Get the measures of count, min, quartile one, median, quartile two,
# max, and standard deviation for each column, allowing for NA values.
# 13d. Pivot longer so the case is a specific measure for each column
# 13e. Separate wider so the column name and measure each have their own
# column
# 13f. Pivot wider so each measure becomes a new column
# 14a. Create a summary table with a caption and kable styling.
data_2015 <- read.csv("https://raw.githubusercontent.com/Stat184-Spring2025/Sec1_FP_Shania_Sree_Lauren/refs/heads/main/2015.csv")
# View(data_2015) #read in and view world happiness data from 2015 to ensure
# imported correctly

data_2016 <- read.csv("https://raw.githubusercontent.com/Stat184-Spring2025/Sec1_FP_Shania_Sree_Lauren/refs/heads/main/2016.csv")
# View(data_2016) #read in and view world happiness data from 2016 to ensure
# imported correctly

data_2017 <- read.csv("https://raw.githubusercontent.com/Stat184-Spring2025/Sec1_FP_Shania_Sree_Lauren/refs/heads/main/2017.csv")
# View(data_2017) #read in and view world happiness data from 2017 to ensure
# imported correctly

data_2018 <- read.csv("https://raw.githubusercontent.com/Stat184-Spring2025/Sec1_FP_Shania_Sree_Lauren/refs/heads/main/2018.csv")
# View(data_2018) read in and view world happiness data from 2018 to ensure
# imported correctly

data_2019 <- read.csv("https://raw.githubusercontent.com/Stat184-Spring2025/Sec1_FP_Shania_Sree_Lauren/refs/heads/main/2019.csv")
# View(data_2019) read in and view world happiness data from 2019 to ensure
# imported correctly
```

```{r}
# 2a. Tidy 2015 data
# 2b. Remove standard error column as only appear in 2015 data and no other
# analogs in the other data sets
# 2c. Add in year column so when merge all data sets together, know this data
# came from 2015
data_2015 <- data_2015 |>
  select(!c(
    "Standard.Error" # remove standard error as does not appear in any other
    # data set
  )) |>
  mutate(
    Year = 2015 # add year column so when merge can differentiate between
    # years
  )
```

```{r}
# 3a. Tidy 2016 data
# 3b. Remove confidence interval columns as only appear in 2016 data and no
# other analogs in the other data sets
# 3c. Add in year column so when merge all data sets together, know this data
# came from 2016
data_2016 <- data_2016 |>
  select(!c(
    "Lower.Confidence.Interval",
    "Upper.Confidence.Interval" # remove columns as do not appear in any
    # other data set
  )) |>
  mutate(
    Year = 2016 # add year column so when merge can differentiate between
    # years
  )
```

```{r}
# 4a. Tidy 2017 data
# 4b. Remove whisker columns as only appear in 2017 data and no other analogs
# in the other data sets
# 4c. Add in year column so when merge all data sets together, know this data
# came from 2017
data_2017 <- data_2017 |>
  select(!c(
    "Whisker.high",
    "Whisker.low", # remove columns as do not appear in any
    # other data set
  )) |>
  mutate(
    Year = 2017 # add year column so when merge can differentiate between
    # years
  )
```

```{r}
# 5a. Tidy 2018 data
# 5b. Rename columns in 2018 data so match with names of columns in 2015,
# 2016, and 2017 data
# 5c. Ensure government corruption treated as numeric, since numeric in all
# other data sets
# 5c. Add in year column so when merge all data sets together, know this data
# came from 2018
data_2018 <- data_2018 |>
  rename(
    Happiness.Rank = Overall.rank,
    Country = Country.or.region,
    Happiness.Score = Score,
    Economy..GDP.per.Capita. = GDP.per.capita,
    Family = Social.support,
    Health..Life.Expectancy. = Healthy.life.expectancy,
    Freedom = Freedom.to.make.life.choices,
    Trust..Government.Corruption. = Perceptions.of.corruption # rename
    # columns to match names of previous years data, as when use bind_rows
    # later, if not named exactly the same way, these columns will be
    # treated as different columns, even though they are measuring the same
    # features as the columns in the previous data sets
  ) |>
  mutate(
    Trust..Government.Corruption. = as.numeric(Trust..Government.Corruption.), # ensure this is treated as
    # numeric, as is numeric data
    Year = 2018 # add year column so when merge can differentiate between
    # years
  )
```

```{r}
# 6a. Tidy 2019 data
# 6b. Rename columns in 2019 data so match with names of columns in 2015,
# 2016, 2017, and 2018 data
# 6c. Add in year column so when merge all data sets together, know this data
# came from 2019
data_2019 <- data_2019 |>
  rename(
    Happiness.Rank = Overall.rank,
    Country = Country.or.region,
    Happiness.Score = Score,
    Economy..GDP.per.Capita. = GDP.per.capita,
    Family = Social.support,
    Health..Life.Expectancy. = Healthy.life.expectancy,
    Freedom = Freedom.to.make.life.choices,
    Trust..Government.Corruption. = Perceptions.of.corruption # rename
    # columns to match names of previous years data, as when use bind_rows
    # later, if not named exactly the same way, these columns will be
    # treated as different columns, even though they are measuring the same
    # features as the columns in the previous data sets
  ) |>
  mutate(
    Year = 2019 # add year column so when merge can differentiate between
    # years
  )
```

```{r}
# 7a. Merge all tidied year data by adding the rows of each data set into a
# total years data frame
total_data <- bind_rows(data_2015, data_2016, data_2017, data_2018, data_2019) # use bind rows to make a longer singular data frame of data made
# up of data from all of the years
```

```{r}
# 8a. Merge total years data with 2015 data by matching Country column
total_data_merge <- total_data |> left_join( # left join as want to keep all
  # records from total data and match region from 2015 data to them
  x = total_data,
  y = data_2015,
  by = join_by(Country == Country) # join by country as common column
)
```

```{r}
# 9a. Add Region column to total data merged with data from 2015. First, add
# regions already known for countries in 2015 and 2016. Then, add in regions
# for the countries  in other years that match the countries from the 2015
# data set.
total_data_merge$Region <- total_data_merge$Region.x # add region column
# to merged data frame with regions from total_data (so countries that
# already have regions in 2015/2016 data)
total_data_merge$Region[!is.na(total_data_merge$Region.y)] <-
  total_data_merge$Region.y[!is.na(total_data_merge$Region.y)] # for rows,
# where have the same country as in 2015 data but at a later year, so the
# region is the same, add the region got from 2015 data to new region column
```

```{r}
# 10a. Merge total years data with 2016 data by matching Country column
total_data_merge <- total_data_merge |> left_join( # left join as want to keep all records from total data and match region from 2016 data to them
  x = total_data_merge,
  y = data_2016,
  by = join_by(Country == Country) # join by country as common column
)
```

```{r}
# 11a. Add Region column to total data merged with data from 2016. First,
# add regions already known for countries in 2015 and 2016. Then, add in
# regions for the countries  in other years that match the countries from
# the 2016 data set.
# 11b. Add new region data to final total data set
total_data_merge$Region <- total_data_merge$Region.x # add region column
# to merged data frame with regions from total_data (so countries that
# already have regions in 2015/2016 data, or where have the same country as
# in 2015 data but at a later year, so the region is the same)
total_data_merge$Region[!is.na(total_data_merge$Region.y)] <-
  total_data_merge$Region.y[!is.na(total_data_merge$Region.y)] # for rows,
# where have the same country as in 2016 data but at a later year, so the
# region is the same, add the region got from 2016 data to new region column
total_data$Region <- total_data_merge$Region # add region column from merged
# data to final tidy data frame
```

```{r}
# 12a. Tidy final total data set
# 12b. Rename Family column to support system as this encompasses family and
# friends as social support
tidy_world_happiness <- total_data |>
  rename(
    Support.System = Family # rename column as in earlier data was called ]
    # Family and in later data called social support, but feature of
    # family/friend support measure is the same
  )
# View(total_data) #check that tidied total data is correct
```

```{r}
# 13a. Create a summary table based on each feature in the data set
# 13b. Summarize across the numeric columns in the total data set
# 13c. Get the measures of count, min, quartile one, median, quartile two,
# max, and standard deviation for each column, allowing for NA values.
# 13d. Pivot longer so the case is a specific measure for each column
# 13e. Separate wider so the column name and measure each have their own
# column
# 13f. Pivot wider so each measure becomes a new column
world_happiness_summary <- tidy_world_happiness |>
  summarize(across(
    Happiness.Rank:Dystopia.Residual, # across all numeric columns
    list(
      count = length,
      min = ~ min(.x, na.rm = TRUE),
      q1 = ~ quantile(.x, probs = 0.25, na.rm = TRUE),
      median = ~ median(.x, na.rm = TRUE),
      q2 = ~ quantile(.x, probs = 0.75, na.rm = TRUE),
      max = ~ max(.x, na.rm = TRUE),
      sd = ~ sd(.x, na.rm = TRUE) # five number summary + count and standard
      # deviation, allowing for null values as for some variables measured
      # them in the earlier years but stopped measuring them later, like
      # dystopia residual, but still useful to analyze, why including count,
      # as can differentiate between features representative of the entire
      # data set, or those from earlier years of the report
    )
  )) |>
  pivot_longer(
    cols = Happiness.Rank_count:Dystopia.Residual_sd,
    names_to = "Column_Measure",
    values_to = "Value" # case = specific measure for each column
  ) |>
  separate_wider_delim(
    cols = Column_Measure,
    delim = "_",
    names = c("Column", "Measure") # column name and measure each have their
    # own column now
  ) |>
  pivot_wider(
    names_from = Measure,
    values_from = Value # each measure is now it's own column
  )
```

```{r}
#| label: tbl-summaryvariablesworldhappiness
#| tbl-cap: "Summary Statistics for each variable in the World Happiness Index Data"
#| tbl-pos: H
#| lst-label: lst-table1
#| lst-cap: "Code Chunk for Making World Happiness Summary Stats Enlisted"
# 11a. Create a summary table with a caption and kable styling.
world_happiness_summary |>
  kable(
    caption = "Summary Statistics of each Feature in the World Happiness Index data set",
    booktabs = TRUE,
    align = c("l", rep("c", 6))
  ) |>
  kableExtra::kable_styling(
    bootstrap_options = c("striped", "condensed"), # adding in kable styling
    font_size = 8
  )
```
**Key Insights:**

Happiness scores range widely (2.69-7.77), with a mean of 5.38 (~1.13 SD).

GDP and life expectancy show right-skewed distributions (mean < median). 

Government trust scores are notably low (mean 0.13, max 0.55). 

In @tbl-summaryvariablesworldhappiness

We created a summary table here, which displays descriptive statistics of our data. We wanted to gain an understanding of the shape and distribution of each feature.



### World Bank Data Wrangling and EDA

In the World Bank Data [^2]

[^2]: González, Ariel. "World Bank World Development Indicators." Kaggle.com, 2022, www.kaggle.com/datasets/nicolasgonzalezmunoz/world-bank-world-development-indicators.

@tbl-summaryworldbank summarizes 720 observations of critical development metrics like a country's birth rate, access to electricity and internet:

```{r}
## World Bank Data Wrangling and EDA


# Goal: Tidy the world bank data so only the years and countries included in
# the world happiness index remain. Also, subset the variables to only
# include country, year, and our selected features (access to electricity,
# individuals using the internet, and birth rate). The resulting case is the
# information for a country in a specific year. Then complete EDA analysis
# by creating summary tables of each feature and scatter plots of happiness
# score v percentage of individuals using the internet, birth rate, and
# access to electricity.

# Need: the data from the world bank data set

# Plan
# 1a. Read in the world bank data set from our github repository
# 2a. Tidy world bank data
# 2b. Isolate the Year in the date measurement, by splitting the date column
# by the dash delimiter into Year, Month, Day. We only care about the year,
# because all of the measurements were taken on January 1st of each year.
# 2c. Filter the year column by the years of our world happiness index data
# set (2015, 2016, 2017, 2018, and 2019)
# 2d. Filter the country column by the countries in the world happiness index
# data set
# 2e. Select the columns we want to keep from the data set: year, country,
# access to electricity, individuals using internet, and birth rate
# 2f. Rename the access to electricity, individuals using internet, and birth
# rate columns
# 3a. Create a summary table for access to electricity, individuals using
# internet and birth rate in the data set.
# 3b. Summarize across the columns in the total data set
# 3c. Get the measures of count, min, quartile one, median, quartile two,
# max, and standard deviation for each column, allowing for NA values.
# 3d. Pivot longer so the case is a specific measure for each column
# 3e. Separate wider so the column name and measure each have their own
# column
# 3f. Pivot wider so each measure becomes a new column
# 4a. Create a summary table with a caption and kable styling.
# 5a. Merge world happiness index data and world bank data
# 5b. Ensure year column in world bank data is treated as numeric, as using
# as one of the columns to join the table on
# 5c. Use a left join on the world happiness index data and the world bank
# data, using the columns country and year. Remove rows where there is no
# data for individuals using internet, birth rate, and access to electricity
# 6a. Create a scatter plot of percentage of individuals using the internet
# versus the country's happiness score.
# 6b. Set the x and y axis, the geometry of each mark, point, create labels,
# and add black and white theme
# 7a. Create a scatter plot of the birth rate versus the country's happiness
# score.
# 7b. Set the x and y axis, the geometry of each mark, point, create labels,
# and add black and white theme
# 8a. Create a scatter plot of access to electricity versus the country's
# happiness score.
# 8b. Set the x and y axis, the geometry of each mark, point, create labels,
# and add black and white theme

# 1a. Read in the world bank data set from our github repository
world_bank_data <- read.csv("https://raw.githubusercontent.com/Stat184-Spring2025/Sec1_FP_Shania_Sree_Lauren/refs/heads/main/world_bank_development_indicators.csv") # read in data from github and view data to ensure imported
# correctly
# View(world_bank_data)
```

```{r}
# 2a. Tidy world bank data
# 2b. Isolate the Year in the date measurement, by splitting the date column
# by the dash delimiter into Year, Month, Day. We only care about the year,
# because all of the measurements were taken on January 1st of each year.
# 2c. Filter the year column by the years of our world happiness index data
# set (2015, 2016, 2017, 2018, and 2019)
# 2d. Filter the country column by the countries in the world happiness index
# data set
# 2e. Select the columns we want to keep from the data set: year, country,
# access to electricity, individuals using internet, and birth rate
# 2f. Rename the access to electricity, individuals using internet, and
# birth rate columns
world_bank_tidy <- world_bank_data |>
  separate_wider_delim(
    cols = date,
    delim = "-",
    names = c("Year", "Month", "Day") # the original data column was year,
    # month, day separated by dashes, so this separates the column as we
    # will just be using the year information
  ) |>
  filter(
    (Year %in% c(2015, 2016, 2017, 2018, 2019)) # filter to use only data
    # that matches our primary data set (years 2015, 2016, 2017, 2018, 2019)
  ) |>
  filter(
    (country %in% c(total_data$Country)) # filter to use only data about
    # countries that appear in our primary data set, using the country
    # column from the tidied total_data
  ) |>
  select(
    c(country, Year, access_to_electricity., individuals_using_internet., birth_rate) # select columns want to use from world bank data set, we chose
    # birth rate/access to electricity/internet, as we thought they were
    # interesting features and had a minimal amount of missing values when
    # filtered by year/countries in world happiness index data
  ) |>
  rename(
    access.to.electricity = access_to_electricity.,
    individuals.using.internet = individuals_using_internet.,
    birth.rate = birth_rate # rename columns to use period, so when create
    # summary table later, can separate by first appearance of underscore,
    # which will separate the feature name from the summary statistic
  )
# View(world_bank_tidy) #check to see if tidied world bank data is correct
```

```{r}
# 3a. Create a summary table for access to electricity, individuals using
# internet and birth rate in the data set.
# 3b. Summarize across the columns in the total data set
# 3c. Get the measures of count, min, quartile one, median, quartile two,
# max, and standard deviation for each column, allowing for NA values.
# 3d. Pivot longer so the case is a specific measure for each column
# 3e. Separate wider so the column name and measure each have their own
# column
# 3f. Pivot wider so each measure becomes a new column
world_bank_summary <- world_bank_tidy |>
  summarize(across(
    access.to.electricity:birth.rate, # across three features found
    # interesting in data set
    list(
      count = length,
      min = ~ min(.x, na.rm = TRUE),
      q1 = ~ quantile(.x, probs = 0.25, na.rm = TRUE),
      median = ~ median(.x, na.rm = TRUE),
      q2 = ~ quantile(.x, probs = 0.75, na.rm = TRUE),
      max = ~ max(.x, na.rm = TRUE),
      sd = ~ sd(.x, na.rm = TRUE)
    ) # five number summary + count and standard
    # deviation, allowing for null values as for some variables were not
    # measured for the countries in our world happiness index data set
    # during the years of the world happiness data, why including count,
    # as can see the number of missing values for each feature
  )) |>
  pivot_longer(
    cols = access.to.electricity_count:birth.rate_sd,
    names_to = "Column_Measure",
    values_to = "Value" # case = specific measure for each column
  ) |>
  separate_wider_delim(
    cols = Column_Measure,
    delim = "_",
    names = c("Column", "Measure") # column name and measure each have their
    # own column now
  ) |>
  pivot_wider(
    names_from = Measure,
    values_from = Value # each measure is now it's own column
  )
```

```{r}
#| label: tbl-summaryworldbank
#| tbl-cap: "Summary Statistics of each feature from the World Bank data set"
#| tbl-pos: H
#| lst-label: lst-table1
#| lst-cap: "Code Chunk for Making World Bank Summary Table"
# 4a. Create a summary table with a caption and kable styling.
world_bank_summary |>
  kable(
    caption = "Summary Statistics of each Feature in the World Bank data set",
    booktabs = TRUE,
    align = c("l", rep("c", 6))
  ) |>
  kableExtra::kable_styling(
    bootstrap_options = c("striped", "condensed"),
    font_size = 8 # adding in kable styling
  )
```
**Key Insights:**

As shown in @fig-electricityplot, electricity access is bimodal as the median is 99.6% of the countries having access to electricity but the mean is 82.5% due to low access outliers. 

As shown in @fig-birthrateplot, Birth rates vary significantly (a min of 6.4 and a max of 46.6), which suggests demographic transition stages (fluctuation between high ans low birth rates) within countries.

As shown in n @fig-internetplot, the relationship appears positively correlated. Countries with low internet usage have lower happiness scores (as low as ~3), whereas countries with high internet usage (above 80%) cluster around higher happiness scores (6–8), suggesting internet usage may be associated with happiness.

In @tbl-summaryworldbank

```{r}
# 5a. Merge world happiness index data and world bank data
# 5b. Ensure year column in world bank data is treated as numeric, as using
# as one of the columns to join the table on
# 5c. Use a left join on the world happiness index data and the world bank
# data, using the columns country and year. Remove rows where there is no
# data for individuals using internet, birth rate, and access to electricity
world_bank_tidy <- world_bank_tidy |>
  mutate(
    Year = as.numeric(Year) # ensure year column treated as numeric in world
    # bank data, as numeric in total data, so when use for left join need to
    # be the same type
  )

merged_data <- total_data |>
  left_join( # left join as want to keep all records from total data
    x = total_data,
    y = world_bank_tidy,
    by = join_by(Country == country, Year == Year)
  ) |>
  drop_na(c(individuals.using.internet, birth.rate, access.to.electricity)) # remove any rows without a value (null) for our
# three variables of interest, as want to compare features from world bank
# to happiness score from world happiness index
```
The case for the merged data set of the tidy world happiness data and world bank data is a set of features from both the world happiness report and world bank data set for a country in a specific year. The attributes are a combination of all of the attributes from the tidy world happiness data set and the tidy world bank data set.

```{r}
#| label: fig-internetplot
#| fig-cap: "Happiness Score versus Percentage of Individuals Using the Internet"
#| fig-pos: H
#| fig-height: 5
#| fig-alt: "Scatterplot of happiness score v internet"
#| lst-cap: "Code Chunk for Making Happiness Score v Internet Figure"
# 6a. Create a scatter plot of percentage of individuals using the internet
# versus the country's happiness score.
# 6b. Set the x and y axis, the geometry of each mark, point, create labels,
# and add black and white theme
ggplot(
  data = merged_data, # merged data of tidy happiness index and tidy world
  # bank, with rows where missing any features from world bank removed
  mapping = aes(
    x = individuals.using.internet,
    y = Happiness.Score # plot happiness score v internet
  )
) +
  geom_point() + # scatter plot
  labs(
    x = "Percentage of Individuals Using the Internet (0% - 100%)",
    y = "Happiness Score (0 - 10)", # decimal value from 0 - 10
    title = "Happiness Score v Percentage of Individuals Using the Internet"
  ) +
  theme_bw()
```
In @fig-internetplot

```{r}
#| label: fig-birthrateplot
#| fig-cap: "Happiness Score versus Birth Rate"
#| fig-pos: H
#| fig-height: 5
#| fig-alt: "Scatterplot of happiness score v birth rate"
#| lst-cap: "Code Chunk for Making Happiness Score v birth rate Figure"
# 7a. Create a scatter plot of the birth rate versus the country's happiness
# score.
# 7b. Set the x and y axis, the geometry of each mark, point, create labels,
# and add black and white theme
ggplot(
  data = merged_data, # merged data of tidy happiness index and tidy world
  # bank, with rows where missing any features from world bank removed
  mapping = aes(
    x = birth.rate,
    y = Happiness.Score # plot happiness score v birth rate
  )
) +
  geom_point() + # scatter plot
  labs(
    x = "Birth Rate (per 1,000 people)",
    y = "Happiness Score (0 - 10)", # decimal score 0 - 10
    title = "Happiness Score v Birth Rate"
  ) +
  theme_bw()
```
In @fig-birthrateplot

```{r}
#| label: fig-electricityplot
#| fig-cap: "Happiness Score versus Percentage of Individuals with Access to Electricity"
#| fig-pos: H
#| fig-height: 5
#| fig-alt: "Scatterplot of happiness score v electricity"
#| lst-cap: "Code Chunk for Making Happiness Score v eletricity Figure"
# 8a. Create a scatter plot of access to electricity versus the country's
# happiness score.
# 8b. Set the x and y axis, the geometry of each mark, point, create labels,
# and add black and white theme
ggplot(
  data = merged_data, # merged data of tidy happiness index and tidy world
  # bank, with rows where missing any features from world bank removed
  mapping = aes(
    x = access.to.electricity,
    y = Happiness.Score # plot happiness score v electricity
  )
) +
  geom_point() + # scatter plot
  labs(
    x = "Percentage of Individuals with Access to Electricity (0% - 100%)",
    y = "Happiness Score (0 - 10)", # decimal score 0 - 10
    title = "Happiness Score v Access to Electricity"
  ) +
  theme_bw()
```
In @fig-electricityplot

## Visualization One - Line Plot of Happiness Score over time between the Top Five and Bottom Five Countries

In the second half of the report, we are using CDA as opposed to EDA in the first half of the report, as we are trying to confirm or deny our hypotheses or research questions. For example, the line plot is meant to answer the specific question of time affecting a country's happiness score.

The line chart, @fig-finalhappinessovertimeplot, tracks happiness scores over five years for the top and bottom 5 countries in the world happiness index rankings. This visualization can help show us whether countries are resistant to change in happiness scores or not.

```{r}
## Visualization One - Line Plot of Happiness Score over time between the Top Five and Bottom Five Countries


# Goal: Obtain the top five happiest countries and the bottom five happiest
# countries in 2015. Compare those countries with where they appear on this
# chart in 2019. Evaluate the increases and decreases that occur between
# those four years.

# Polishing: To achieve this final visualization, there were some changes that
# were made to improve the clarity of the line plot. First, we cut down our
# number of countries from 20 (top 10, bottom 10), to 10 (top 5, bottom 5).
# This way, the resulting plot appears less cluttered. Additionally,
# the countries in the key were placed in order from the happiest to the
# most unhappy countries, instead of alphabetical order. Lastly, the colors
# and line type were altered to make it more colorblind-friendly, and overall,
# more aesthetically pleasing.

# Need: the cleaned 2015 and 2019 data from the World Bank Data set

# Plan
# 1a. Create a variable for the top five countries in 2015
# 1b. Isolate those countries by arranging the Happiness Score in descending
# order. Then, taking each country from one to five. Then, taking the name
# of each Country
# 2a. Create a variable for the bottom five countries in 2015
# 2b. Isolate those countries by arranging the Happiness Score. Then, taking
# each country from one to five. Then, taking the name of each Country
# 3a. Combine the top five and bottom five variables into one variable named
# Countries
# 4a. Create a new variable containing the data for each country
# 4b. Firstly, we want to combine the rows from the 2015 and 2019 data set.
# Then, filter the data by the name of the countries. Next, group by the
# country and the year, which would show each country twice: the score in
# 2015 and the score in 2019. Lastly, summarize each by the mean Happiness
# Score
# 5a. Specify data, x axis, y axis, color, and line type
# 5b. Set the line width
# 5c. Specify the color of each line and the corresponding label on the
# legend, using a color blind friendly palette
# 5d. Specify the type of each line and the corresponding label on the
# legend, dual encoding for discriminatory/color blindness
# 5e. Add the labels for the title, each axis, and the color/line type
# 5f. Add black and white theme
```

```{r}
# 1a. Create a variable for the top five countries in 2015
# 1b. Isolate those countries by arranging the Happiness Score in descending
# order. Then, taking each country from one to five. Then, taking the name
# of each Country
top5 <- data_2015 |>
  arrange(
    desc(
      Happiness.Score # sort data from 2015 happiness score from highest to
      # lowest, as want to get five happiness countries in 2015 and see if
      # their happiness score changes over time
    )
  ) |>
  slice(
    1:5 # take top five rows, or top five happiest countries
  ) |>
  pull(
    Country # keep country name of top five rows (happiest countries)
  )
```

```{r}
# 2a. Create a variable for the bottom five countries in 2015
# 2b. Isolate those countries by arranging the Happiness Score. Then, taking
# each country from one to five. Then, taking the name of each Country
bottom5 <- data_2015 |>
  arrange(
    Happiness.Score # sort data from 2015 happiness score from lowest to
    # highest, as want to get five least happy countries in 2015 and see
    # if their happiness score changes over time
  ) |>
  slice(
    1:5 # take top five rows, or top five least happy countries
  ) |>
  pull(
    Country # keep country name of top five rows (least happy countries)
  )
```

```{r}
# 3a. Combine the top five and bottom five variables into one variable named
# Countries
countries <- c(top5, bottom5) # combine names of most/least happy countries
```

```{r}
# 4a. Create a new variable containing the data for each country
# 4b. Firstly, we want to combine the rows from the 2015 and 2019 data set.
# Then, filter the data by the name of the countries. Next, group by the
# country and the year, which would show each country twice: the score in
# 2015 and the score in 2019. Lastly, summarize each by the mean Happiness
# Score
countries_data <- bind_rows(
  data_2015, data_2019 # bind together data from 2015 and 2019 (start and end
  # of happiness index data set, as want to see a graph of the change
  # between year 1 and year n, or start/end of data set)
) |>
  filter(
    Country %in% countries # only want to see top five happiest countries, or
    # bottom five happiest countries
  ) |>
  group_by(
    Country, Year # group by country/year
  ) |>
  summarize(
    score = mean(Happiness.Score), # summarize happiness score
    .groups = "drop"
  )
```

```{r}
#| label: fig-finalhappinessovertimeplot
#| fig-cap: "Happiness Score Change between the top five and bottom five Countries in 2015 vs. 2019"
#| fig-alt: "Final Line plot of happiness score over time"
#| lst-cap: "Code Chunk for Making Final Happiness Score over time"
#| fig-pos: H
#| fig-height: 5
#| fig-width: 10
# 5a. Specify data, x axis, y axis, color, and line type
# 5b. Set the line width
# 5c. Specify the color of each line and the corresponding label on the
# legend, using a color blind friendly palette
# 5d. Specify the type of each line and the corresponding label on the
# legend, dual encoding for discriminatory/color blindness
# 5e. Add the labels for the title, each axis, and the color/line type
# 5f. Add black and white theme
ggplot(
  data = countries_data, # data of top five and bottom five happiest
  # countries from 2015 and 2019 (country, year, happiness score)
  mapping = aes(
    x = Year,
    y = score,
    color = Country,
    linetype = Country # plot year v score, color and line type based on the
    # country name (each country get different color/line type)
  )
) +
  geom_line(
    linewidth = 1.2 # adjust line thickness
  ) +
  scale_colour_manual(
    values = c(
      "Switzerland" = "#88CCEE",
      "Iceland" = "#CC6677",
      "Denmark" = "#DDCC77",
      "Norway" = "#117733",
      "Canada" = "#332288",
      "Rwanda" = "#AA4499",
      "Benin" = "#44AA99",
      "Syria" = "#999933",
      "Burundi" = "#882255",
      "Togo" = "#661100" # assign color blind friendly color to each country
    ),
    labels = c(
      "Switzerland - Highest Happiness Score",
      "Iceland - Second Highest Happiness Score",
      "Denmark - Third Highest Happiness Score",
      "Norway - Fourth Highest Happiness Score",
      "Canada - Fifth Highest Happiness Score",
      "Rwanda - Fifth Lowest Happiness Score",
      "Benin - Fourth Lowest Happiness Score",
      "Syria - Third Lowest Happiness Score",
      "Burundi - Second Lowest Happiness Score",
      "Togo - Lowest Happiness Score" # change order of countries from
      # alphabetical to by happiness score, manually label each country with
      # corresponding happiness score rank
    )
  ) +
  scale_linetype_manual(
    values = c(
      "Switzerland" = 1,
      "Iceland" = 2,
      "Denmark" = 3,
      "Norway" = 3,
      "Canada" = 4,
      "Rwanda" = 5,
      "Benin" = 6,
      "Syria" = 1,
      "Burundi" = 2,
      "Togo" = 3 # assign line type to each country
    ),
    labels = c(
      "Switzerland - Highest Happiness Score",
      "Iceland - Second Highest Happiness Score",
      "Denmark - Third Highest Happiness Score",
      "Norway - Fourth Highest Happiness Score",
      "Canada - Fifth Highest Happiness Score",
      "Rwanda - Fifth Lowest Happiness Score",
      "Benin - Fourth Lowest Happiness Score",
      "Syria - Third Lowest Happiness Score",
      "Burundi - Second Lowest Happiness Score",
      "Togo - Lowest Happiness Score" # change order of countries from
      # alphabetical to by happiness score, manually label each country with
      # corresponding happiness score rank
    )
  ) +
  labs(
    title = "Change in Happiness of Most and Least Happy Countries",
    x = "Year",
    y = "Happiness Score (0 - 10)",
    color = "Country",
    linetype = "Country" # add title, labels, legend titles
  ) +
  theme_bw() # add theme
```

In @fig-finalhappinessovertimeplot

**Key Insights:**

-   **Distinct Trend Lines:**

    -   We can see that the top 5 countries are all nearly horizontal and are tightly clustered between scores 7.2-7.6, confirming stability. The bottom 5 lines are also almost clustered together in the 3.0-3.9 range, with some outliers like the country of Rwanda that shows a strong upward trend.

-   **Economic Shifts:**

    -   We can notice that all the top five countries seem to have a small downward trend starting from 2017, which can suggest a global issue, which has affected these major countries, hence the reason why there is no outlier, because all the countries are following a similar trend [^2].

    -   We can also see that there are some outliers in the bottom five, like the country of Rwanda, which shows us that there are efforts being made in their respective governments for the betterment of society [^2].

-   But even if the countries in the bottom five do seem to have an upward trend, we can see that the difference in scores between the top and bottom five are still drastic at the end of the five-year time period, suggesting that there is still some form of consistency between the scores.

## Visualization Two - Frequency Table of Happiness Scores and Region

In @tbl-regionvhappinessscore, we examinesthe distribution of happiness scores across 10 global regions over a five-year period, categorizing countries into score ranges of 2.5 to 8 to identify patterns. With this data, we can explore the question of whether happiness rankings stay consistent over time.

```{r}
## Visualization Two - Frequency Table of Happiness Scores and Region


# Goal: Create a frequency table of the binned happiness scores against each
# region. The scores should be binned, as they are currently in decimal
# form, therefore generalizing them will allow for greater comparison power.

# Polishing: We initially had the happiness score binned into whole numbers
# as opposed to binning by decimals. This did not allow for enough
# differentiation between scores and generalized the data too much.

# Need: tidied world happiness index data

# Plan
# 1a. Reform world happiness index data so it can be used to create a
# frequency table
# 1b. Bin the happiness score in the world happiness index data (going by
# 0.5 stop inclusive, from 0 - 10)
# 1c. Drop any rows in the data set where the country region is unknown, as
# meant to be comparing across regions
# 2a. Create region and happiness score world happiness index relative
# frequency table
# 2b. Call tabyl function with region as row and happiness score as column
# 2e. Add marginal totals
# 2f. Add percentages
# 2g. Set decimals to two places
# 2h. Add row and column titles
# 3a. Polish region and happiness score relative frequency table
# 3b. Put percentages for each cell in parentheses
# 3c. Add commas to numbers over nine hundred and ninety nine
# 3d. Add counts
# 4a. Add title and kableExtra for styling

# 1a. Reform world happiness index data so it can be used to create a
# frequency table
# 1b. Bin the happiness score in the world happiness index data (going by
# 0.5 stop inclusive, from 0 - 10)
# 1c. Drop any rows in the data set where the country region is unknown, as
# meant to be comparing across regions
world_happiness_summary_region <-
  tidy_world_happiness |>
  mutate(
    binned.happiness.score = case_when(
      Happiness.Score <= 0.5 ~ "0 - 0.5",
      Happiness.Score > 0.5 & Happiness.Score <= 1 ~ "0.5 - 1",
      Happiness.Score > 1 & Happiness.Score <= 1.5 ~ "1 - 1.5",
      Happiness.Score > 1.5 & Happiness.Score <= 2 ~ "1.5 - 2",
      Happiness.Score > 2 & Happiness.Score <= 2.5 ~ "2 - 2.5",
      Happiness.Score > 2.5 & Happiness.Score <= 3 ~ "2.5 - 3",
      Happiness.Score > 3 & Happiness.Score <= 3.5 ~ "3 - 3.5",
      Happiness.Score > 3.5 & Happiness.Score <= 4 ~ "3.5 - 4",
      Happiness.Score > 4 & Happiness.Score <= 4.5 ~ "4 - 4.5",
      Happiness.Score > 4.5 & Happiness.Score <= 5 ~ "4.5 - 5",
      Happiness.Score > 5 & Happiness.Score <= 5.5 ~ "5 - 5.5",
      Happiness.Score > 5.5 & Happiness.Score <= 6 ~ "5.5 - 6",
      Happiness.Score > 6 & Happiness.Score <= 6.5 ~ "6 - 6.5",
      Happiness.Score > 6.5 & Happiness.Score <= 7 ~ "6.5 - 7",
      Happiness.Score > 7 & Happiness.Score <= 7.5 ~ "7 - 7.5",
      Happiness.Score > 7.5 & Happiness.Score <= 8 ~ "7.5 - 8",
      Happiness.Score > 8 & Happiness.Score <= 8.5 ~ "8 - 8.5",
      Happiness.Score > 8.5 & Happiness.Score <= 9 ~ "8.5 - 9",
      Happiness.Score > 9 & Happiness.Score <= 9.5 ~ "9 - 9.5",
      Happiness.Score > 9.5 & Happiness.Score <= 10 ~ "9.5 - 10"
    ) # bin the happiness scores by 0.5, there is a small range of happiness
    # score values (from around 2.5 - 7.5) so binning by whole number means
    # generalizing the data so much that not a lot of meaningful conclusions
    # can be made
  ) |>
  drop_na(Region) # remove any rows where no region, as comparing region
# to happiness score
```

```{r}
# 2a. Create region and happiness score world happiness index relative
# frequency table
# 2b. Call tabyl function with region as row and happiness score as column
# 2e. Add marginal totals
# 2f. Add percentages
# 2g. Set decimals to two places
# 2h. Add row and column titles
world_happy_freq <-
  world_happiness_summary_region |>
  tabyl(
    Region, binned.happiness.score # create frequency table based on region
    # and binned happiness score (both categorical values)
  ) |>
  adorn_totals(
    where = c("row", "col")
  ) |>
  adorn_percentages(
    denominator = "all" # percentages relative to entire table
  ) |>
  adorn_pct_formatting(
    digits = 2 # limit decimals to two, shows enough detail without being
    # excessive
  ) |>
  adorn_title(
    placement = "combined",
    row_name = "Region",
    col_name = "Happiness Score" # add title to row/column
  )
```

```{r}
# 3a. Polish region and happiness score relative frequency table
# 3b. Put percentages for each cell in parentheses
# 3c. Add commas to numbers over nine hundred and ninety nine
# 3d. Add counts
formatNs <-
  attr(
    world_happy_freq, "core"
  ) |>
  adorn_totals(
    where = c("row", "col")
  ) |>
  mutate(
    across(
      where(is.numeric),
      ~ format(.x, big.mark = ",", na.rm = TRUE)
    ) # adding commas for numbers greater than 999
  )

world_happy_freq <- world_happy_freq |>
  adorn_ns(
    position = "front", ns = formatNs
  ) # add formatting from formatNs, postion front
```

```{r}
#| label: tbl-regionvhappinessscore
#| tbl-cap: "Region and Happiness Score Frequency Table"
#| tbl-pos: H
#| lst-label: lst-table1
#| lst-cap: "Code Chunk for Making Region/Happiness Freq Table"
# 4a. Add title and kableExtra for styling
world_happy_freq |>
  kable(
    caption = "Region and Happiness Score of Countires in the World Happiness Index 2015 - 2019",
    booktabs = TRUE,
    align = c("l", rep("c", 6))
  ) |>
  kableExtra::kable_styling(
    bootstrap_options = c("striped", "condensed"),
    font_size = 3 # add in kable styling
  )
```
In @tbl-regionvhappinessscore, we created a frequency table, as opposed to a summary table, as we are grouping by the categorical attributes of region and the binned happiness score. We are trying to compare the absolute and relative case frequencies across region and score.

**Key Insights:**

**Regional Happiness Clusters Persist Over Time (from 2015-2019):**

Regions such as Australia/NZ (100% in the 6.5-7.5 range) and Western Europe (~67.96% in the 6.5-8 range) consistently rank the highest, suggesting long-established advantages like strong GDP, social support, etc [^1]. 

There is also a low score stability with a region like Sub-Saharan Africa which dominates the bottom tiers (21.1% in the 2.5-3.5 range), indicating persistent challenges such as limited infrastructure investments, and political instability [^1]. 

**There is Limited Mobility Between Tiers:**

While there are some regions such as the Middle East/North Africa and Latin America, that show a moderate spread across the mid-range scores, indicating some form of change, there are no countries that transitioned from the bottom quartile (<4) to the top quartile (>6) or vice versa [^1]. 

This answers our first research question, proving that happiness is consistent and that there is little change when it comes to happiness scores over time. The countries that had an initially high-score continue to consistently stay high and similarly the countries that initially had low score consistently have stayed in the lower quartile, showing that there long-term factors such as GDP and governance that plays a role in short-term fluctuations. 

## Visualization Three - Scatter plot of Happiness Score v Birth Rate

In @fig-finalbirthrateplot, we explore the relationship between national birth rates (per 1,000 people) and happiness scores of over 150+ countries from 2015-2019 to test the hypothesis that higher birth rates may strain resources and lower happiness.

```{r}
## Visualization Three - Scatter plot of Happiness Score v Birth Rate


# Goal: Create a scatter plot of the birth rate versus the country's happiness score.

# Polishing: We added in a trend line between happiness score and birth rate
# to more clearly indicate the negative correlation. We added in a color
# gradient to dual encoding the fact that as birth rate increased, happiness
# score decreased.

# Need: merged data set of world happiness index data and world bank data

# Plan
# 1a. Create a scatter plot of birth rate versus the country's happiness
# score.
# 1b. Specify the wrangled data to be used, the x axis, the y
# axis, and what the color of each point is based on, the happiness score
# 1c. Specify aesthetic geometry, point
# 1d. Create a linear trend line with no confidence interval, set the color
# to black, and set the line width
# 1e. Add labels to the x axis, y axis, color, and the title, add black and
# white theme
```

```{r}
#| label: fig-finalbirthrateplot
#| fig-cap: "Happiness Score versus Birth Rate"
#| fig-alt: "Final Scatterplot of happiness score v birth rate"
#| lst-cap: "Code Chunk for Making Final Happiness Score v Birth Rate Figure"
#| fig-pos: H
#| fig-height: 5
# 1a. Create a scatter plot of birth rate versus the country's happiness
# score.
# 1b. Specify the wrangled data to be used, the x axis, the y
# axis, and what the color of each point is based on, the happiness score
# 1c. Specify aesthetic geometry, point
# 1d. Create a linear trend line with no confidence interval, set the color
# to black, and set the line width
# 1e. Add labels to the x axis, y axis, color, and the title, add black and
# white theme
ggplot(
  data = merged_data, # merged data of tidy happiness index and tidy world
  # bank, with rows where missing any features from world bank removed
  mapping = aes(
    x = birth.rate,
    y = Happiness.Score,
    color = Happiness.Score # plot of happiness score v birth rate, dural
    # encode happiness score by position and color gradient
  )
) +
  geom_point( # scatter plot
    size = 2
  ) +
  geom_smooth(
    method = lm, # add in linear trend line of happiness score as a function
    # of birth rate
    formula = y ~ x, # specify formula use
    se = FALSE, # no confident interval shadind
    colour = "#000000", # color line black
    linewidth = 2 # set line width
  ) +
  labs(
    x = "Birth Rate (per 1,000 people)",
    y = "Happiness Score (0 - 10)",
    color = "Happiness Score",
    title = "Happiness Score v Birth Rate" # add in title, labels, and legend
    # title
  ) +
  theme_bw() # add in theme
```
In @fig-finalbirthrateplot

**Key Insights:**

-   **Strong Negative Correlation** (r = -0.72):

    -   Countries with birth rates (\>25) cluster in low happiness scores (3-5), while those with birth rates (\<15) score above 6.

-   **Socioeconomic Factors:**

    -   We can see that nations with a low birth rate are the ones that are happier, and from our previous visualizations, we can incur that regions with universal secondary education and with highly urbanized societies (ex. Australia/NZ, Western Europe, etc.) are the happiest and these are the regions that also have a low birth rate.

    -   In the same way, we can also come to the conclusion that the regions with a high birth rate have a lower happiness score and that these regions can also have issues such as political instability and a lower GDP.

## Conclusion

This project’s analysis of global happiness data reveals two critical insights:

1.  **Happiness is Persistent Over Time:**

    -   The happiest countries maintained their high scores with minimal fluctuations, while the least happy remained stagnant. **Only a few exceptions, like Rwanda, showed meaningful improvement**, suggesting that well-being is deeply tied to long-term structural factors like governance, economic stability, and social trust.

2.  **Birth Rates and Happiness Are Strongly Linked**

    -   Higher birth rates correlate with lower happiness, reflecting challenges like limited resources and gender inequality. However, **wealth and policy can override this trend**, as seen in Gulf States with moderate happiness despite higher birth rates.

In the end, we can come to the conclusion that happiness is not static, but meaningful change requires systemic investment and not just short-term fixes. The visualizations confirm that while outliers exist, **most nations remain locked in their happiness tier over time**.


## References
"World Happiness Report." www.kaggle.com, www.kaggle.com/datasets/unsdsn/world-happiness.

González, Ariel. "World Bank World Development Indicators." Kaggle.com, 2022, www.kaggle.com/datasets/nicolasgonzalezmunoz/world-bank-world-development-indicators.

## Code Appendix

```{r codeAppend, ref.label=knitr::all_labels(), echo=TRUE, eval=FALSE}
```
