---
title: "Final Project"
subtitle: "Stat 184"
author: "Shania, Sree, and Lauren"
date: "May 7, 2025"
date-modified: now
format:
  pdf:
    toc: false
    code-fold: true
    code-link: true
    number-sections: true
    number-depth: 5
    fig-align: center
    cap-location: top
    geometry: 
      - top = 1in
      - left = 1in
      - right = 1in
      - bottom = 1in
    colorlinks: true
execute: 
  echo: false
  output: true
  warning: false
code-appendix: true
---

## Introduction

Sree was responsible for all narrative text. Shania was responsible for the README and visualization one, the line plot of happiness scores over time. Lauren was responsible for all other code except visualization one. 

The World Happiness Report is a landmark global survey that measures and ranks the happiness levels of nations, providing valuable insights into the well-being of populations worldwide. By analyzing factors such as GDP per capita, birth rate, freedom, people with access to resources like the internet, and perceptions of corruption, the report offers a comprehensive understanding of what contributes to a fulfilling life. Happiness, as a metric, goes beyond economic indicators to encompass emotional and social dimensions, making it a crucial tool for policymakers and researchers. However, happiness is a multifaceted concept that cannot be fully captured by a single measure, requiring a deeper examination of cultural, environmental, and individual factors to truly understand what makes societies thrive and happy.

The purpose of this project is to explore what qualities of a country impact its happiness score.

In this project, we aim to explore two core research questions:

1.  Does time have an effect on the happiness rate? (i.e. do the "happiest" countries tend to stay happy even after a certain number of years and do the "saddest" countries tend to stay sad even after a certain number of years?). And does the region of the country play a role in this?

2.  How does the birth rate in the data set correlate with its reported happiness levels? Are there any underlying socioeconomic factors that might explain the relationship?

These questions explore how happiness changes over time, region, and socioeconomic factors like birth rate. The findings from this report could inform policy makers and emphasize the importance of stability and population dynamics in wellbeing. Also,  the project aims to provide actionable insights that deepen the understanding of global happiness patterns.

## Data Provenance

In this project, we used two datasets to explore happiness across time, region, and socioeconomic factors. We found these data sets in the online repository Kaggle, published by reliable sources. Moreover, we have rigorously wrangled and cleaned the data, ensuring a trustworthy final data set.

#### Primary Dataset

-   Name: World Happiness Report [^1]

-   Source: Kaggle

-   Collected By: A collaboration between Gallup, The University of Oxford's Wellbeing Research Centre, and the UN Sustainable Development Solutions Network

-   Description: This data set contains happiness rankings and scores for over 150 countries from the year 2015 to 2019. Furthermore, the data measures the effect of socioeconomic factors, like GDP, on each countries' happiness score. Each part of the data set represents one year of measurements of the world happiness report. For example, if we look at the 2015 part of the data, there are approximately one hundred and fifty rows, each representing a country surveyed in 2015. The subsequent columns represent the features measured for each country in that year, like happiness score (etc.). The final wrangled and cleaned data set contains the features measured for each country across 2015 to 2019. There are some features removed in the final data set as they were not measured across all years.

-   Purpose: We used the data set to analyze global wellbeing trends, quantify drivers of happiness, and provide evidence-based insights.

-   Cases: In the original data sets, the case was the features associated with each country. The data sets were all separated by year. In the final data set, the case was the features associated with each country in a specific year. For example, a case in the final data set could have been the features measured for the United States in the year 2019. 

#### Secondary Dataset

-   Name: World Bank Development Indicators [^2]

-   Source: Kaggle

-   Collected By: World Bank Group

-   Description: The data set contains information about economic, social, political, and environmental indicators. The data set spans from 1960 to 2022 for over 260 countries. The data set features the measurement date, the country name, and the related features measured. The features include GDP, birth rate, and energy consumption (etc). 

-   Purpose: The World Bank Group collected this data to aid policy makers and the public understand development indicators. This allows policy makers to set benchmarks, identify effective actions, and monitor progress towards reducing poverty. We used the data set to analyze socioeconomic factors that could impact a countries' happiness score.

-   Cases: In the initial and cleaned data set, the case was the features associated with each country in a specific year. A case could have been the features associated with Ireland in 2015.

## Data Wrangling

To help us answer our research questions, we integrated the data from the primary and secondary datasets into a single dataset.

#### World Happiness Report

[^1]

First, we read in each part of the data set over 2015 to 2019. (We read in each data file associated with 2015 to 2019 from our GitHub repository). 

Then, we worked on tidying each data set individually to integrate it with the other tables later. This involved removing features that were not measured across the data sets. For example, in the 2015 data, a feature was standard error which was not measured in later data sets. Additionally, in each data set, we added the collection year, like 2015 (etc). We ensured features that measured the same information across the years had consistent naming. Also, we checked that each feature was the same data type across the years.

After we cleaned each individual data set, we merged the data sets into one data set. We wanted to ensure that we had regions connected to most of our countries in our final data set. Therefore, we joined our final data set with our tidied data from 2015 and 2016. We used these two years, as they measured the region those years and not later years. The countries measured across the years were similar and the region of a country never changes. So, we could match up the same country measured in later years to the earlier region feature. This allowed us to attach regions to 763 out of 782 instances in our final data set. We renamed the column Family in our final data set to Social Support. This was to show continuity as the surveyors renamed the feature in the later years of the support. However, the feature captured the same information over the entire data set. 

#### World Bank Data Development Indicators
[^2]

First, we read in the data set. (We read in the data file from our GitHub repository). 

Then, we worked on tidying the data set. This involved deriving the year feature from the date column. We split the date column of year, month, and day into separate columns. We only kept the year column as the primary data set only used year. Moreover, the world bank data set measured each feature on January 1st, every year. So, year is the only thing that differentiates each date. We filtered the data set by the years of the primary data set. This means we only kept measurements from the years 2015, 2016, 2017, 2018, and 2019. We filtered the data set by the countries that appear in the primary data set. Additionally, we selected the features we wanted to examine in our analysis. This included the country name, the derived year, percentage of individuals with access to electricity, percentage of individuals using the internet, and birth rate. We chose these because they seemed the most interesting to us and did not have a majority of missing values. 

## Merging

We ensured the features we were using to join the two tidied tables, year and country, were the same data type. We joined the tidied world happiness report and world bank data set by ensuring the year and country names matched. We kept all of the records from our primary data set, the world happiness report. We eliminated records from our secondary data set, the world bank development indicators, if there was not a corresponding match of year and country in our primary data set. 
Our final merged data set contained the features of countries surveyed in the world happiness report from 2015 to 2019. However, now the data set also contained world bank features of the same countries from 2015 to 2019. The new case of the merged data set are the features from both data sets of a country in a certain year.

## Variable Selection

We retained most of the variables from the world happiness report. The year feature is the year the surveyors took those measurements. The country feature is the name of the country. The region feature is the region the country belongs to. The happiness rank is the rank of the country based on their happiness score. The happiness score is the averaged score of the answer to a question across a sample of one thousand people in a certain year and from a certain country. The question, from a Gallup poll, is "How would you rate your happiness on a scale of zero to ten, where ten is the happiest." The surveyor tells individuals to imagine a ladder where the best possible life is the top rung of the ladder, ten, and the worst possible life is the bottom rung of the ladder, zero. This imaginary ladder is a "Cantrill ladder." Cantrill ladders are subjective measures as individuals self-anchor their "ladder" based on their perspective. If two people have radically different life experiences, then their ladder rungs look radically different. Economy (GDP per capita) is the extent to which GDP contributes to the calculation of the happiness score. This means, for each country, when there is a change in GDP, how much does that affect the happiness score. Family or social support is the extent to which the support of family and friends contributes to the calculation of the happiness score. This means, for each country, when there is a change in a person's support system, how much does that affect the happiness score. Health (Life Expectancy) is the extent to which the life expectancy of individuals in the country contributes to the calculation of the happiness score. This means, for each country, when there is a change in the average life expectancy, how much does that affect the happiness score. Freedom is the extent to which the perception of freedoms contributes to the calculation of the happiness score. This means, for each country, when there is a change in the perception of freedoms, how much does that affect the happiness score. Trust (Government Corruption) is the extent to which the perception of corruption contributes to the calculation of the happiness score. This means, for each country, when there is a change in the perception of corruption in the government, how much does that affect the happiness score. Generosity is the extent to which the perception of generosity contributes to the calculation of the happiness score. This means, for each country, when there is a change in the perception of generosity, how much does that affect the happiness score. Dystopia represents an imaginary country with the world's least happy people. This establishes a benchmark, as no country will perform worse than dystopia, to compare all other countries against.

In the world bank development indicators data set, we retained country, year, access to electricity, individuals using the internet, and birth rate. Country refers to the name of the country. We derived year from the date feature, which had the year, month, and day. The year feature is the year the surveyors took those measurements.  Access to electricity refers to the percentage of the population that has access to electricity. This ranges from zero percent to one hundred percent. Individuals using the internet refers to the percentage of the population using the internet. This also ranges from zero percent to one hundred percent. The birth rate refers to the birth rate per one thousand people. 

Our analysis will focus on the happiness score and region from the world happiness report data set. In the world bank data set, we will focus on access to electricity, individuals using the internet, and birth rate. We will be using country and year from both data sets. 

## Filtering and Cleaning

When conducting analysis using features from the secondary data set, we removed any cases where features were missing.

When conducting analysis using the region from the primary data set, we removed any cases where the region was missing. 

Moreover, when constructing summary tables of the tidied data sets, we allowed for null values. We counteracted this by also including a count feature. Therefore, any viewer knows how representative any feature was of the entire data set. For example, if there are a high number of instances of the feature, there are a small number of missing values.

## FAIR AND CARE Principles:

The datasets used in this report adhere to the FAIR & CARE principles, highlighting the availability and the ethics of the data:

#### FAIR

**F- FINDABLE:**

-Both the world happiness report and world bank data set are on Kaggle, which is a publicly available platform where people can find and publish data sets. 

**A- ACCESSIBLE:**

- Both data sets are accessible through Kaggle, allowing anyone to download and use the data at their leisure.

**I- INTEROPERABLE:**

- Both data sets are in the form of .csv files, making the data compatible with many tools and platforms, like R-Studio. 

**R- REUSABLE:**

- Both datasets include metadata and documentation that aligns with the metadata.

- In the world happiness report, we changed the column name referring to family/social to social support. We also accounted for any data not measured as null. By doing so, we cleaned up the structure making it easier for future use.

#### CARE

**C- COLLECTIVE BENEFIT:**

- Although neither data set involves specific communities, these are each meant to improve the global and country specific understanding of happiness and well-being.

**A- AUTHORITY TO CONTROL:**

- The surveyors collected the data at the country level. There are no concerns surrounding individual control.

- Even if a country has a high happiness score, it does not represent an individuals' experience in that country.

**R- RESPONSIBILITY:**

- The data sets are open to use, yet there are no warnings for use or misuse.

**E - ETHICS:**

- The companies collected the data ethically through international surveys. However, we cannot assume that individuals consented to this information being public.

## Exploratory Data Analysis (EDA) for the World Happiness Index

To uncover patterns in global wellbeing, we conducted Exploratory Data Analysis (EDA) on the World Happiness Index [^1] and World Bank [^2] data sets. We generated summary statistics for each data set. Also, we explored correlations between features across both data sets. 

We used EDA as we hoped to better understand the data, generate hypotheses, and develop research questions. Also, we analyzed each visualization after we created it, as opposed to seeking to affirm or reject a hypothesis. We created general visualizations of distributions of each feature to see what unexpected insights we gained. The visualizations we created seek to mitigate the harms of not examining all our data. When we examined Anscombe's quartet, each data set had the same summary statistics but different shapes. These were all in pursuit of building a data story with descriptive statistics, visualizations, and narrative text. Our statistics are descriptive as opposed to inferential, as we are not inferring values outside of our data range or predicting from a model of the data. 

In our coding, we used Tidyverse more than we used base R. We were more confident with Tidyverse and naturally remembered functions from Tidyverse before base R. Also, we needed to complete a lot of data wrangling and Tidyverse has a lot of packages that are very helpful. We read in files remotely from GitHub, as opposed to locally. This allowed us to be fully immersed in utilizing GitHub. This method does not require another person to download our data set to their machine if they want to run our code. Therefore, this person does not lose storage space, and our code is more reproducible as it runs without any outside installation.

```{r}
# Code Style Guide - The Tidyverse Style Guide
# Import all necessary libraries for the entire qmd file
# Enforce Tidyverse Style Guide using library styler and style active file
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
library(ggplot2)
library(janitor)
library(styler) # importing necessary libraries
#styler:::style_active_file() # un comment and run when want to enforce
# Tidyverse Style Guide
```

```{r}
## World Happiness Index Data Wrangling and EDA


# Goal: Tidy the world happiness data so each year is integrated into one
# data set. The resulting case is the happiness score for a country in a
# specific year. Then complete EDA analysis by creating summary tables of
# each feature and grouped by region.

# Polishing: We removed a summary table of each feature by region, as this
# was an overwhelming amount of information and did not lead to useful
# insights into our data.

# Need: all of the separate world happiness data csv (2015, 2016, 2017, 2018,
# and 2019)

# Plan
# 1a. Read in all of the individual data sets (2015, 2016, 2017, 2018, and
# 2019) from our github repository
# 2a. Tidy 2015 data
# 2b. Remove standard error column as only appear in 2015 data and no other
# analogs in the other data sets
# 2c. Add in year column so when merge all data sets together, know this data
# came from 2015
# 3a. Tidy 2016 data
# 3b. Remove confidence interval columns as only appear in 2016 data and no
# other analogs in the other data sets
# 3c. Add in year column so when merge all data sets together, know this data
# came from 2016
# 4a. Tidy 2017 data
# 4b. Remove whisker columns as only appear in 2017 data and no other analogs
# in the other data sets
# 4c. Add in year column so when merge all data sets together, know this data
# came from 2017
# 5a. Tidy 2018 data
# 5b. Rename columns in 2018 data so match with names of columns in 2015,
# 2016, and 2017 data
# 5c. Ensure government corruption treated as numeric, since numeric in all
# other data sets
# 5c. Add in year column so when merge all data sets together, know this data
# came from 2018
# 6a. Tidy 2019 data
# 6b. Rename columns in 2019 data so match with names of columns in 2015,
# 2016, 2017, and 2018 data
# 6c. Add in year column so when merge all data sets together, know this data
# came from 2019
# 7a. Merge all tidied year data by adding the rows of each data set into a
# total years data frame
# 8a. Merge total years data with 2015 data by matching Country column
# 9a. Add Region column to total data merged with data from 2015. First, add
# regions already known for countries in 2015 and 2016. Then, add in regions
# for the countries  in other years that match the countries from the 2015
# data set.
# 10a. Merge total years data with 2016 data by matching Country column
# 11a. Add Region column to total data merged with data from 2016. First,
# add regions already known for countries in 2015 and 2016. Then, add in
# regions for the countries  in other years that match the countries from
# the 2016 data set.
# 11b. Add new region data to final total data set
# 12a. Tidy final total data set
# 12b. Rename Family column to support system as this encompasses family and
# friends as social support
# 13a. Create a summary table based on each feature in the data set
# 13b. Summarize across the numeric columns in the total data set
# 13c. Get the measures of count, min, quartile one, median, quartile two,
# max, and standard deviation for each column, allowing for NA values.
# 13d. Pivot longer so the case is a specific measure for each column
# 13e. Separate wider so the column name and measure each have their own
# column
# 13f. Pivot wider so each measure becomes a new column
# 14a. Create a summary table with a caption and kable styling.
data_2015 <- read.csv("https://raw.githubusercontent.com/Stat184-Spring2025/Sec1_FP_Shania_Sree_Lauren/refs/heads/main/2015.csv")
# View(data_2015) #read in and view world happiness data from 2015 to ensure
# imported correctly

data_2016 <- read.csv("https://raw.githubusercontent.com/Stat184-Spring2025/Sec1_FP_Shania_Sree_Lauren/refs/heads/main/2016.csv")
# View(data_2016) #read in and view world happiness data from 2016 to ensure
# imported correctly

data_2017 <- read.csv("https://raw.githubusercontent.com/Stat184-Spring2025/Sec1_FP_Shania_Sree_Lauren/refs/heads/main/2017.csv")
# View(data_2017) #read in and view world happiness data from 2017 to ensure
# imported correctly

data_2018 <- read.csv("https://raw.githubusercontent.com/Stat184-Spring2025/Sec1_FP_Shania_Sree_Lauren/refs/heads/main/2018.csv")
# View(data_2018) read in and view world happiness data from 2018 to ensure
# imported correctly

data_2019 <- read.csv("https://raw.githubusercontent.com/Stat184-Spring2025/Sec1_FP_Shania_Sree_Lauren/refs/heads/main/2019.csv")
# View(data_2019) read in and view world happiness data from 2019 to ensure
# imported correctly
```

```{r}
# 2a. Tidy 2015 data
# 2b. Remove standard error column as only appear in 2015 data and no other
# analogs in the other data sets
# 2c. Add in year column so when merge all data sets together, know this data
# came from 2015
data_2015 <- data_2015 |>
  select(!c(
    "Standard.Error" # remove standard error as does not appear in any other
    # data set
  )) |>
  mutate(
    Year = 2015 # add year column so when merge can differentiate between
    # years
  )
```

```{r}
# 3a. Tidy 2016 data
# 3b. Remove confidence interval columns as only appear in 2016 data and no
# other analogs in the other data sets
# 3c. Add in year column so when merge all data sets together, know this data
# came from 2016
data_2016 <- data_2016 |>
  select(!c(
    "Lower.Confidence.Interval",
    "Upper.Confidence.Interval" # remove columns as do not appear in any
    # other data set
  )) |>
  mutate(
    Year = 2016 # add year column so when merge can differentiate between
    # years
  )
```

```{r}
# 4a. Tidy 2017 data
# 4b. Remove whisker columns as only appear in 2017 data and no other analogs
# in the other data sets
# 4c. Add in year column so when merge all data sets together, know this data
# came from 2017
data_2017 <- data_2017 |>
  select(!c(
    "Whisker.high",
    "Whisker.low", # remove columns as do not appear in any
    # other data set
  )) |>
  mutate(
    Year = 2017 # add year column so when merge can differentiate between
    # years
  )
```

```{r}
# 5a. Tidy 2018 data
# 5b. Rename columns in 2018 data so match with names of columns in 2015,
# 2016, and 2017 data
# 5c. Ensure government corruption treated as numeric, since numeric in all
# other data sets
# 5c. Add in year column so when merge all data sets together, know this data
# came from 2018
data_2018 <- data_2018 |>
  rename(
    Happiness.Rank = Overall.rank,
    Country = Country.or.region,
    Happiness.Score = Score,
    Economy..GDP.per.Capita. = GDP.per.capita,
    Family = Social.support,
    Health..Life.Expectancy. = Healthy.life.expectancy,
    Freedom = Freedom.to.make.life.choices,
    Trust..Government.Corruption. = Perceptions.of.corruption # rename
    # columns to match names of previous years data, as when use bind_rows
    # later, if not named exactly the same way, these columns will be
    # treated as different columns, even though they are measuring the same
    # features as the columns in the previous data sets
  ) |>
  mutate(
    Trust..Government.Corruption. = as.numeric(Trust..Government.Corruption.), # ensure this is treated as
    # numeric, as is numeric data
    Year = 2018 # add year column so when merge can differentiate between
    # years
  )
```

```{r}
# 6a. Tidy 2019 data
# 6b. Rename columns in 2019 data so match with names of columns in 2015,
# 2016, 2017, and 2018 data
# 6c. Add in year column so when merge all data sets together, know this data
# came from 2019
data_2019 <- data_2019 |>
  rename(
    Happiness.Rank = Overall.rank,
    Country = Country.or.region,
    Happiness.Score = Score,
    Economy..GDP.per.Capita. = GDP.per.capita,
    Family = Social.support,
    Health..Life.Expectancy. = Healthy.life.expectancy,
    Freedom = Freedom.to.make.life.choices,
    Trust..Government.Corruption. = Perceptions.of.corruption # rename
    # columns to match names of previous years data, as when use bind_rows
    # later, if not named exactly the same way, these columns will be
    # treated as different columns, even though they are measuring the same
    # features as the columns in the previous data sets
  ) |>
  mutate(
    Year = 2019 # add year column so when merge can differentiate between
    # years
  )
```

```{r}
# 7a. Merge all tidied year data by adding the rows of each data set into a
# total years data frame
total_data <- bind_rows(data_2015, data_2016, data_2017, data_2018, data_2019) # use bind rows to make a longer singular data frame of data made
# up of data from all of the years
```

```{r}
# 8a. Merge total years data with 2015 data by matching Country column
total_data_merge <- total_data |> left_join( # left join as want to keep all
  # records from total data and match region from 2015 data to them
  x = total_data,
  y = data_2015,
  by = join_by(Country == Country) # join by country as common column
)
```

```{r}
# 9a. Add Region column to total data merged with data from 2015. First, add
# regions already known for countries in 2015 and 2016. Then, add in regions
# for the countries  in other years that match the countries from the 2015
# data set.
total_data_merge$Region <- total_data_merge$Region.x # add region column
# to merged data frame with regions from total_data (so countries that
# already have regions in 2015/2016 data)
total_data_merge$Region[!is.na(total_data_merge$Region.y)] <-
  total_data_merge$Region.y[!is.na(total_data_merge$Region.y)] # for rows,
# where have the same country as in 2015 data but at a later year, so the
# region is the same, add the region got from 2015 data to new region column
```

```{r}
# 10a. Merge total years data with 2016 data by matching Country column
total_data_merge <- total_data_merge |> left_join( # left join as want to keep all records from total data and match region from 2016 data to them
  x = total_data_merge,
  y = data_2016,
  by = join_by(Country == Country) # join by country as common column
)
```

```{r}
# 11a. Add Region column to total data merged with data from 2016. First,
# add regions already known for countries in 2015 and 2016. Then, add in
# regions for the countries  in other years that match the countries from
# the 2016 data set.
# 11b. Add new region data to final total data set
total_data_merge$Region <- total_data_merge$Region.x # add region column
# to merged data frame with regions from total_data (so countries that
# already have regions in 2015/2016 data, or where have the same country as
# in 2015 data but at a later year, so the region is the same)
total_data_merge$Region[!is.na(total_data_merge$Region.y)] <-
  total_data_merge$Region.y[!is.na(total_data_merge$Region.y)] # for rows,
# where have the same country as in 2016 data but at a later year, so the
# region is the same, add the region got from 2016 data to new region column
total_data$Region <- total_data_merge$Region # add region column from merged
# data to final tidy data frame
```

```{r}
# 12a. Tidy final total data set
# 12b. Rename Family column to support system as this encompasses family and
# friends as social support
tidy_world_happiness <- total_data |>
  rename(
    Support.System = Family # rename column as in earlier data was called ]
    # Family and in later data called social support, but feature of
    # family/friend support measure is the same
  )
# View(total_data) #check that tidied total data is correct
```

```{r}
# 13a. Create a summary table based on each feature in the data set
# 13b. Summarize across the numeric columns in the total data set
# 13c. Get the measures of count, min, quartile one, median, quartile two,
# max, and standard deviation for each column, allowing for NA values.
# 13d. Pivot longer so the case is a specific measure for each column
# 13e. Separate wider so the column name and measure each have their own
# column
# 13f. Pivot wider so each measure becomes a new column
world_happiness_summary <- tidy_world_happiness |>
  summarize(across(
    Happiness.Rank:Dystopia.Residual, # across all numeric columns
    list(
      count = length,
      min = ~ min(.x, na.rm = TRUE),
      q1 = ~ quantile(.x, probs = 0.25, na.rm = TRUE),
      median = ~ median(.x, na.rm = TRUE),
      q3 = ~ quantile(.x, probs = 0.75, na.rm = TRUE),
      max = ~ max(.x, na.rm = TRUE),
      sd = ~ sd(.x, na.rm = TRUE) # five number summary + count and standard
      # deviation, allowing for null values as for some variables measured
      # them in the earlier years but stopped measuring them later, like
      # dystopia residual, but still useful to analyze, why including count,
      # as can differentiate between features representative of the entire
      # data set, or those from earlier years of the report
    )
  )) |>
  pivot_longer(
    cols = Happiness.Rank_count:Dystopia.Residual_sd,
    names_to = "Column_Measure",
    values_to = "Value" # case = specific measure for each column
  ) |>
  separate_wider_delim(
    cols = Column_Measure,
    delim = "_",
    names = c("Column", "Measure") # column name and measure each have their
    # own column now
  ) |>
  pivot_wider(
    names_from = Measure,
    values_from = Value # each measure is now it's own column
  )
```

```{r}
#| label: tbl-summaryvariablesworldhappiness
#| tbl-cap: "Summary Statistics for each variable in the World Happiness Index Data"
#| tbl-pos: H
#| lst-label: lst-table1
#| lst-cap: "Code Chunk for Making World Happiness Summary Stats Enlisted"
# 11a. Create a summary table with a caption and kable styling.
world_happiness_summary |>
  kable(
    caption = "Summary Statistics of each Feature in the World Happiness Index data set",
    booktabs = TRUE,
    align = c("l", rep("c", 6))
  ) |>
  kableExtra::kable_styling(
    bootstrap_options = c("striped", "condensed"), # adding in kable styling
    font_size = 8
  )
```
  @tbl-summaryvariablesworldhappiness is a summary table of descriptive statistics of each of the features in the tidied world happiness report. This table allows us to better understand the shape of the distributions of each feature. Count denotes the number of instances observed for each feature. Min is the minimum value observed for each feature. Q1 is the point in the data where twenty five percent of the data falls below it for each feature. Median is the middle value observed for each feature. Q2 is the point in the data where seventy five percent of the data falls below it for each feature. Max is the maximum value observed for each feature. Sd is the standard deviation or how much the data deviates from the average for each feature. A low standard deviation means the range of possible values for the feature is small. A high standard deviation means the range of possible values is larger. This is a modification of the five number summary, that includes the number of observations (count) and the standard deviation. Each column represents a different statistic. Each row represents the statistical measures for a feature. Since there are 782 instances of the data in the tidied world happiness data, count shows there are no missing values for any of the features. Happiness score ranges widely, from a minimum of 2.69 to a maximum of 7.77. The high standard deviation of 1.12 supports this conclusion, as there is a wide range of possible values. Moreover, happiness score has a mean of 5.38. This might mean that the sampled population views five as the middle of the "ladder" or an average life. So, on average, people think their life is decent or average. However, if you forget the ladder goes from zero to ten, making five the middle, you would view five as slightly less than average in a ladder from one to ten. So, most people see their life as average or slightly worse than average. As evident by the median 1.12, support system, or support from friends and family has a big impact on happiness score. This could be tied to our evolutionary basis as social animals that need to interact with others. So, if someone is not able to have enough social support, that would affect their mood. Trust in government scores are notably low with a median of 0.09 and a maximum of 0.55. This possibly plays into the fact that people typically think of happiness in relation to themselves and their close family or friends. Therefore, a person's opinion on government corruption probably does not factor into their personal happiness.

## Exploratory Data Analysis (EDA) for the World Bank Development Indicators
```{r}
## World Bank Data Wrangling and EDA


# Goal: Tidy the world bank data so only the years and countries included in
# the world happiness index remain. Also, subset the variables to only
# include country, year, and our selected features (access to electricity,
# individuals using the internet, and birth rate). The resulting case is the
# information for a country in a specific year. Then complete EDA analysis
# by creating summary tables of each feature and scatter plots of happiness
# score v percentage of individuals using the internet, birth rate, and
# access to electricity.

# Need: the data from the world bank data set

# Plan
# 1a. Read in the world bank data set from our github repository
# 2a. Tidy world bank data
# 2b. Isolate the Year in the date measurement, by splitting the date column
# by the dash delimiter into Year, Month, Day. We only care about the year,
# because all of the measurements were taken on January 1st of each year.
# 2c. Filter the year column by the years of our world happiness index data
# set (2015, 2016, 2017, 2018, and 2019)
# 2d. Filter the country column by the countries in the world happiness index
# data set
# 2e. Select the columns we want to keep from the data set: year, country,
# access to electricity, individuals using internet, and birth rate
# 2f. Rename the access to electricity, individuals using internet, and birth
# rate columns
# 3a. Create a summary table for access to electricity, individuals using
# internet and birth rate in the data set.
# 3b. Summarize across the columns in the total data set
# 3c. Get the measures of count, min, quartile one, median, quartile two,
# max, and standard deviation for each column, allowing for NA values.
# 3d. Pivot longer so the case is a specific measure for each column
# 3e. Separate wider so the column name and measure each have their own
# column
# 3f. Pivot wider so each measure becomes a new column
# 4a. Create a summary table with a caption and kable styling.
# 5a. Merge world happiness index data and world bank data
# 5b. Ensure year column in world bank data is treated as numeric, as using
# as one of the columns to join the table on
# 5c. Use a left join on the world happiness index data and the world bank
# data, using the columns country and year. Remove rows where there is no
# data for individuals using internet, birth rate, and access to electricity
# 6a. Create a scatter plot of access to electricity versus the country's
# happiness score.
# 6b. Set the x and y axis, the geometry of each mark, point, create labels,
# and add black and white theme
# 7a. Create a scatter plot of percentage of individuals using the internet
# versus the country's happiness score.
# 7b. Set the x and y axis, the geometry of each mark, point, create labels,
# and add black and white theme
# 8a. Create a scatter plot of the birth rate versus the country's happiness
# score.
# 8b. Set the x and y axis, the geometry of each mark, point, create labels,
# and add black and white theme

# 1a. Read in the world bank data set from our github repository
world_bank_data <- read.csv("https://raw.githubusercontent.com/Stat184-Spring2025/Sec1_FP_Shania_Sree_Lauren/refs/heads/main/world_bank_development_indicators.csv") # read in data from github and view data to ensure imported
# correctly
# View(world_bank_data)
```

```{r}
# 2a. Tidy world bank data
# 2b. Isolate the Year in the date measurement, by splitting the date column
# by the dash delimiter into Year, Month, Day. We only care about the year,
# because all of the measurements were taken on January 1st of each year.
# 2c. Filter the year column by the years of our world happiness index data
# set (2015, 2016, 2017, 2018, and 2019)
# 2d. Filter the country column by the countries in the world happiness index
# data set
# 2e. Select the columns we want to keep from the data set: year, country,
# access to electricity, individuals using internet, and birth rate
# 2f. Rename the access to electricity, individuals using internet, and
# birth rate columns
world_bank_tidy <- world_bank_data |>
  separate_wider_delim(
    cols = date,
    delim = "-",
    names = c("Year", "Month", "Day") # the original data column was year,
    # month, day separated by dashes, so this separates the column as we
    # will just be using the year information
  ) |>
  filter(
    (Year %in% c(2015, 2016, 2017, 2018, 2019)) # filter to use only data
    # that matches our primary data set (years 2015, 2016, 2017, 2018, 2019)
  ) |>
  filter(
    (country %in% c(total_data$Country)) # filter to use only data about
    # countries that appear in our primary data set, using the country
    # column from the tidied total_data
  ) |>
  select(
    c(country, Year, access_to_electricity., individuals_using_internet., birth_rate) # select columns want to use from world bank data set, we chose
    # birth rate/access to electricity/internet, as we thought they were
    # interesting features and had a minimal amount of missing values when
    # filtered by year/countries in world happiness index data
  ) |>
  rename(
    access.to.electricity = access_to_electricity.,
    individuals.using.internet = individuals_using_internet.,
    birth.rate = birth_rate # rename columns to use period, so when create
    # summary table later, can separate by first appearance of underscore,
    # which will separate the feature name from the summary statistic
  )
# View(world_bank_tidy) #check to see if tidied world bank data is correct
```

```{r}
# 3a. Create a summary table for access to electricity, individuals using
# internet and birth rate in the data set.
# 3b. Summarize across the columns in the total data set
# 3c. Get the measures of count, min, quartile one, median, quartile two,
# max, and standard deviation for each column, allowing for NA values.
# 3d. Pivot longer so the case is a specific measure for each column
# 3e. Separate wider so the column name and measure each have their own
# column
# 3f. Pivot wider so each measure becomes a new column
world_bank_summary <- world_bank_tidy |>
  summarize(across(
    access.to.electricity:birth.rate, # across three features found
    # interesting in data set
    list(
      count = length,
      min = ~ min(.x, na.rm = TRUE),
      q1 = ~ quantile(.x, probs = 0.25, na.rm = TRUE),
      median = ~ median(.x, na.rm = TRUE),
      q3 = ~ quantile(.x, probs = 0.75, na.rm = TRUE),
      max = ~ max(.x, na.rm = TRUE),
      sd = ~ sd(.x, na.rm = TRUE)
    ) # five number summary + count and standard
    # deviation, allowing for null values as for some variables were not
    # measured for the countries in our world happiness index data set
    # during the years of the world happiness data, why including count,
    # as can see the number of missing values for each feature
  )) |>
  pivot_longer(
    cols = access.to.electricity_count:birth.rate_sd,
    names_to = "Column_Measure",
    values_to = "Value" # case = specific measure for each column
  ) |>
  separate_wider_delim(
    cols = Column_Measure,
    delim = "_",
    names = c("Column", "Measure") # column name and measure each have their
    # own column now
  ) |>
  pivot_wider(
    names_from = Measure,
    values_from = Value # each measure is now it's own column
  )
```

```{r}
#| label: tbl-summaryworldbank
#| tbl-cap: "Summary Statistics of each feature from the World Bank data set"
#| tbl-pos: H
#| lst-label: lst-table1
#| lst-cap: "Code Chunk for Making World Bank Summary Table"
# 4a. Create a summary table with a caption and kable styling.
world_bank_summary |>
  kable(
    caption = "Summary Statistics of each Feature in the World Bank data set",
    booktabs = TRUE,
    align = c("l", rep("c", 6))
  ) |>
  kableExtra::kable_styling(
    bootstrap_options = c("striped", "condensed"),
    font_size = 8 # adding in kable styling
  )
```
  @tbl-summaryworldbank is a summary table of descriptive statistics of each of the features in the tidied world bank development indicators data set. Again, this table allows us to better understand the shape of the distributions of each feature. Count denotes the number of instances observed for each feature. Min is the minimum value observed for each feature. Q1 is the point in the data where twenty five percent of the data falls below it for each feature. Median is the middle value observed for each feature. Q2 is the point in the data where seventy five percent of the data falls below it for each feature. Max is the maximum value observed for each feature. Sd is the standard deviation or how much the data deviates from the average for each feature. A low standard deviation means the range of possible values for the feature is small. A high standard deviation means the range of possible values is larger. This is a modification of the five number summary, that includes the number of observations (count) and the standard deviation. Each column represents a different statistic. Each row represents the statistical measures for a feature. First, any viewer needs to be cognizant of the difference of scale between the features of access to electricity and individuals using the internet versus birth rate. Access to electricity and individuals using the internet are both percentages from zero to one hundred. Birth rate is per one thousand people and ranges from zero to one thousand. However, in this data set, birth ranges from a minimum of six to a maximum of forty-six. So, the birth rate at its maximum is less than the median of access to electricity and individuals using the internet. There can be no comparisons between birth rate and the other two features with these different scales. Access to electricity has a median of around ninety nine percent. This means the middle point of the data is a country where most of its inhabitants have access to electricity. This is great news overall for the world as access to electricity leads to a decrease in manual labor and increased opportunity. However, access to electricity also has a large standard deviation of around twenty-seven and a minimum of around four. This means there is still a long way to go for some countries to have consistent access to electricity. Not having access to electricity is probably an indicator of low development in other areas, like access to the internet. So, individuals using the internet have around the same amount of standard deviation as access to electricity. This indicates there is still a wide disparity in internet access. Moreover, when examining the country associated with the minimum value for access to electricity, they also have the minimum value for individuals using the internet. If there is no wide-ranging electricity access, there can be no wide-ranging internet access, as the internet is dependent on electricity. The median for individuals using the internet is around fifty-eight, much lower than access to electricity. We argue in the earlier years of the data set, 2015, there was no such a big push for the internet recreationally. YouTube and other popular websites were only created ten years ago or less. So, the world was still catching up with using the internet for free time.  Birth rate has a median of around seventeen and a maximum of around forty-six, indicating a wide range of birth rates worldwide. This could be due to cultural and social differences and pressures across cultures to have a differing number of children. Also, it could be due to the fact that with lacking infrastructure, like electricity, the infant mortality rate is higher. So, in order to raise a certain number of children to maturity, there is a higher birth rate.

```{r}
# 5a. Merge world happiness index data and world bank data
# 5b. Ensure year column in world bank data is treated as numeric, as using
# as one of the columns to join the table on
# 5c. Use a left join on the world happiness index data and the world bank
# data, using the columns country and year. Remove rows where there is no
# data for individuals using internet, birth rate, and access to electricity
world_bank_tidy <- world_bank_tidy |>
  mutate(
    Year = as.numeric(Year) # ensure year column treated as numeric in world
    # bank data, as numeric in total data, so when use for left join need to
    # be the same type
  )

merged_data <- total_data |>
  left_join( # left join as want to keep all records from total data
    x = total_data,
    y = world_bank_tidy,
    by = join_by(Country == country, Year == Year)
  ) |>
  drop_na(c(individuals.using.internet, birth.rate, access.to.electricity)) # remove any rows without a value (null) for our
# three variables of interest, as want to compare features from world bank
# to happiness score from world happiness index
```

```{r}
#| label: fig-electricityplot
#| fig-cap: "Happiness Score versus Percentage of Individuals with Access to Electricity"
#| fig-pos: H
#| fig-height: 5
#| fig-alt: "Scatterplot of happiness score v electricity"
#| lst-cap: "Code Chunk for Making Happiness Score v eletricity Figure"
# 6a. Create a scatter plot of access to electricity versus the country's
# happiness score.
# 6b. Set the x and y axis, the geometry of each mark, point, create labels,
# and add black and white theme
ggplot(
  data = merged_data, # merged data of tidy happiness index and tidy world
  # bank, with rows where missing any features from world bank removed
  mapping = aes(
    x = access.to.electricity,
    y = Happiness.Score # plot happiness score v electricity
  )
) +
  geom_point() + # scatter plot
  ylim(0, 10) + # making sure y axis go from zero to ten (happiness score)
  labs(
    x = "Percentage of Individuals with Access to Electricity (0% - 100%)",
    y = "Happiness Score (0 - 10)", # decimal score 0 - 10
    title = "Happiness Score v Access to Electricity"
  ) +
  theme_bw()
```
  In @fig-electricityplot, the x axis represents the percentage of individuals in the country with access to electricity, ranging from zero to one hundred present. The ticks on the x axis are zero, twenty-five, fifty, seventy-five, and one hundred. The y axis represents the happiness score of that country as a decimal from zero to ten. The ticks on the y axis are zero two and a half, five, seven and a half, and ten. Each point represents a country's happiness score versus their percentage of individuals with access to electricity. The graph does not show a strong correlation between an increase in access to electricity and an increase in happiness score. As the percentage of individuals with electricity increases, the happiness score stays in a similar range of around two to seven, with a small increase in happiness score. In @tbl-summaryworldbank, the median for access to electricity was around ninety-nine, which shows in @fig-electricityplot. There is a cluster of points on the right of the figure, around one hundred. Moreover, the wide range of access to electricity values in the figure, matches up with the large standard deviation of the feature. The reason access to electricity does not lead to an increase in happiness score could be because developed countries take access to electricity for granted. If someone has always grown up with access to electricity, they probably are not as thankful as someone who gains electricity. Subjectively, these two individuals value electricity differently due to their differing experiences. This parallels how the Cantrill ladder allows respondents to subjectively anchor themselves in happiness scoring. Someone who has always had electricity, does not consider electricity as something that increases their happiness, but as a baseline expectation.

```{r}
#| label: fig-internetplot
#| fig-cap: "Happiness Score versus Percentage of Individuals Using the Internet"
#| fig-pos: H
#| fig-height: 5
#| fig-alt: "Scatterplot of happiness score v internet"
#| lst-cap: "Code Chunk for Making Happiness Score v Internet Figure"
# 7a. Create a scatter plot of percentage of individuals using the internet
# versus the country's happiness score.
# 7b. Set the x and y axis, the geometry of each mark, point, create labels,
# and add black and white theme
ggplot(
  data = merged_data, # merged data of tidy happiness index and tidy world
  # bank, with rows where missing any features from world bank removed
  mapping = aes(
    x = individuals.using.internet,
    y = Happiness.Score # plot happiness score v internet
  )
) +
  geom_point() + # scatter plot
  ylim(0, 10) + # making sure y axis go from zero to ten (happiness score)
  labs(
    x = "Percentage of Individuals Using the Internet (0% - 100%)",
    y = "Happiness Score (0 - 10)", # decimal value from 0 - 10
    title = "Happiness Score v Percentage of Individuals Using the Internet"
  ) +
  theme_bw()
```
  In @fig-internetplot, the x axis represents the percentage of individuals in the country with access to the internet, ranging from zero to one hundred present. The ticks on the x axis are zero, twenty-five, fifty, seventy-five, and one hundred. The y axis represents the happiness score of that country as a decimal from zero to ten. The ticks on the y axis are zero two and a half, five, seven and a half, and ten. Each point represents a country's happiness score versus their percentage of individuals with access to the internet. The graph does show a stronger positive correlation between an increase in access to the internet and an increase in happiness score, as opposed to @fig-electricityplot. As the percentage of individuals with the internet increases, the happiness score changes from around two to five to around six to seven. The percentage of individuals using the internet shows a relatively even distribution across its entire range. In @tbl-summaryworldbank, quartile one sits at around twenty four percent, the median sits at around fifty eight percent, and quartile three sits at around seventy-nine percent. This corroborates the relatively even distribution across the x axis of the percentage of individuals using the internet in @fig-internetplot. Internet usage might have a stronger relationship to happiness score, as opposed to access to electricity, as most individuals use the internet for fun. Individuals can use the internet for communicating with friends and entertaining themselves. Internet usage can give individuals a greater appreciation of their life, as they are able to observe a wider range of types of life. 

```{r}
#| label: fig-birthrateplot
#| fig-cap: "Happiness Score versus Birth Rate"
#| fig-pos: H
#| fig-height: 5
#| fig-alt: "Scatterplot of happiness score v birth rate"
#| lst-cap: "Code Chunk for Making Happiness Score v birth rate Figure"
# 8a. Create a scatter plot of the birth rate versus the country's happiness
# score.
# 8b. Set the x and y axis, the geometry of each mark, point, create labels,
# and add black and white theme
ggplot(
  data = merged_data, # merged data of tidy happiness index and tidy world
  # bank, with rows where missing any features from world bank removed
  mapping = aes(
    x = birth.rate,
    y = Happiness.Score # plot happiness score v birth rate
  )
) +
  geom_point() + # scatter plot
  ylim(0, 10) + # making sure y axis go from zero to ten (happiness score)
  xlim(2, 50) + # making sure x axis go from zero to fifty (birth rate)
  labs(
    x = "Birth Rate (per 1,000 people)",
    y = "Happiness Score (0 - 10)", # decimal score 0 - 10
    title = "Happiness Score v Birth Rate"
  ) +
  theme_bw()
```
  In @fig-birthrateplot, the x axis represents the birth rate in the country, per one thousand people. This ranges from around five to around fifty per one thousand. The ticks on the x axis are zero, ten, twenty, thirty, forty, and fifty. The y axis represents the happiness score of that country as a decimal from zero to ten. The ticks on the y axis are zero two and a half, five, seven and a half, and ten. Each point represents a country's happiness score versus their birth rate per one thousand people. The graph does show a strong negative correlation between an increase in the birth rate and a decrease in happiness score, as opposed to @fig-electricityplot and  @fig-internetplot. As the birth rate increases, the happiness score changes from around five to seven to around three to five. As seen in @tbl-summaryworldbank, there is a large range, from a minimum of around six to a maximum of around forty-six. This is corroborated in the graphic, as the x axis, or birth rate, has a large range. There is a slight clustering of birth rates around ten to twenty, and less from twenty to fifty. The birth rate and happiness correlation could exist as an indicator of other developmental factors. As stated previously, if there is a high birth rate, there could also be a high infant mortality rate. Also, countries with a higher birth rate could coincidentally have lower happiness scores. Or, there could be a confounding factor, like access to medical care, that is spuriously correlated with birth rate and actually causing the decrease in happiness score.

## Visualization One - Line Plot of Happiness Score over time between the Top Five and Bottom Five Countries

In the second half of the report, we used CDA as opposed to EDA, as we were trying to confirm or deny our hypotheses or research questions. For example, we constructed the line plot to confirm or deny that time affects a country's happiness score.

```{r}
## Visualization One - Line Plot of Happiness Score over time between the Top Five and Bottom Five Countries


# Goal: Obtain the top five happiest countries and the bottom five happiest
# countries in 2015. Compare those countries with where they appear on this
# chart in 2019. Evaluate the increases and decreases that occur between
# those four years.

# Polishing: To achieve this final visualization, there were some changes that
# were made to improve the clarity of the line plot. First, we cut down our
# number of countries from 20 (top 10, bottom 10), to 10 (top 5, bottom 5).
# This way, the resulting plot appears less cluttered. Additionally,
# the countries in the key were placed in order from the happiest to the
# most unhappy countries, instead of alphabetical order. Lastly, the colors
# and line type were altered to make it more colorblind-friendly, and overall,
# more aesthetically pleasing.

# Need: the cleaned 2015 and 2019 data from the World Bank Data set

# Plan
# 1a. Create a variable for the top five countries in 2015
# 1b. Isolate those countries by arranging the Happiness Score in descending
# order. Then, taking each country from one to five. Then, taking the name
# of each Country
# 2a. Create a variable for the bottom five countries in 2015
# 2b. Isolate those countries by arranging the Happiness Score. Then, taking
# each country from one to five. Then, taking the name of each Country
# 3a. Combine the top five and bottom five variables into one variable named
# Countries
# 4a. Create a new variable containing the data for each country
# 4b. Firstly, we want to combine the rows from the 2015 and 2019 data set.
# Then, filter the data by the name of the countries. Next, group by the
# country and the year, which would show each country twice: the score in
# 2015 and the score in 2019. Lastly, summarize each by the mean Happiness
# Score
# 5a. Specify data, x axis, y axis, color, and line type
# 5b. Set the line width
# 5c. Specify the color of each line and the corresponding label on the
# legend, using a color blind friendly palette
# 5d. Specify the type of each line and the corresponding label on the
# legend, dual encoding for discriminatory/color blindness
# 5e. Add the labels for the title, each axis, and the color/line type
# 5f. Add black and white theme
```

```{r}
# 1a. Create a variable for the top five countries in 2015
# 1b. Isolate those countries by arranging the Happiness Score in descending
# order. Then, taking each country from one to five. Then, taking the name
# of each Country
top5 <- data_2015 |>
  arrange(
    desc(
      Happiness.Score # sort data from 2015 happiness score from highest to
      # lowest, as want to get five happiness countries in 2015 and see if
      # their happiness score changes over time
    )
  ) |>
  slice(
    1:5 # take top five rows, or top five happiest countries
  ) |>
  pull(
    Country # keep country name of top five rows (happiest countries)
  )
```

```{r}
# 2a. Create a variable for the bottom five countries in 2015
# 2b. Isolate those countries by arranging the Happiness Score. Then, taking
# each country from one to five. Then, taking the name of each Country
bottom5 <- data_2015 |>
  arrange(
    Happiness.Score # sort data from 2015 happiness score from lowest to
    # highest, as want to get five least happy countries in 2015 and see
    # if their happiness score changes over time
  ) |>
  slice(
    1:5 # take top five rows, or top five least happy countries
  ) |>
  pull(
    Country # keep country name of top five rows (least happy countries)
  )
```

```{r}
# 3a. Combine the top five and bottom five variables into one variable named
# Countries
countries <- c(top5, bottom5) # combine names of most/least happy countries
```

```{r}
# 4a. Create a new variable containing the data for each country
# 4b. Firstly, we want to combine the rows from the 2015 and 2019 data set.
# Then, filter the data by the name of the countries. Next, group by the
# country and the year, which would show each country twice: the score in
# 2015 and the score in 2019. Lastly, summarize each by the mean Happiness
# Score
countries_data <- bind_rows(
  data_2015, data_2019 # bind together data from 2015 and 2019 (start and end
  # of happiness index data set, as want to see a graph of the change
  # between year 1 and year n, or start/end of data set)
) |>
  filter(
    Country %in% countries # only want to see top five happiest countries, or
    # bottom five happiest countries
  ) |>
  group_by(
    Country, Year # group by country/year
  ) |>
  summarize(
    score = mean(Happiness.Score), # summarize happiness score
    .groups = "drop"
  )
```

```{r}
#| label: fig-finalhappinessovertimeplot
#| fig-cap: "Happiness Score Change between the top five and bottom five Countries in 2015 vs. 2019"
#| fig-alt: "Final Line plot of happiness score over time"
#| lst-cap: "Code Chunk for Making Final Happiness Score over time"
#| fig-pos: H
#| fig-height: 5
#| fig-width: 10
# 5a. Specify data, x axis, y axis, color, and line type
# 5b. Set the line width
# 5c. Specify the color of each line and the corresponding label on the
# legend, using a color blind friendly palette
# 5d. Specify the type of each line and the corresponding label on the
# legend, dual encoding for discriminatory/color blindness
# 5e. Add the labels for the title, each axis, and the color/line type
# 5f. Add black and white theme

# countries_data$Country <- c("Switzerland", "Iceland", "Denmark", "Norway", "Canada", "Rwanda", "Benin", "Syria", "Burundi", "Togo")
countries_data$Country <- factor(countries_data$Country, levels = c("Switzerland", "Iceland", "Denmark", "Norway", "Canada", "Rwanda", "Benin", "Syria", "Burundi", "Togo"))

ggplot(
  data = countries_data, # data of top five and bottom five happiest
  # countries from 2015 and 2019 (country, year, happiness score)
  mapping = aes(
    x = Year,
    y = score,
    color = Country,
    linetype = Country # plot year v score, color and line type based on the
    # country name (each country get different color/line type)
  )
) +
  geom_line(
    linewidth = 1.2 # adjust line thickness
  ) +
  scale_colour_manual(
    values = c(
      "Switzerland" = "#88CCEE",
      "Iceland" = "#CC6677",
      "Denmark" = "#DDCC77",
      "Norway" = "#117733",
      "Canada" = "#332288",
      "Rwanda" = "#AA4499",
      "Benin" = "#44AA99",
      "Syria" = "#999933",
      "Burundi" = "#882255",
      "Togo" = "#661100" # assign color blind friendly color to each country
    ),
    labels = c(
      "Switzerland - Highest Happiness Score",
      "Iceland - Second Highest Happiness Score",
      "Denmark - Third Highest Happiness Score",
      "Norway - Fourth Highest Happiness Score",
      "Canada - Fifth Highest Happiness Score",
      "Rwanda - Fifth Lowest Happiness Score",
      "Benin - Fourth Lowest Happiness Score",
      "Syria - Third Lowest Happiness Score",
      "Burundi - Second Lowest Happiness Score",
      "Togo - Lowest Happiness Score" # change order of countries from
      # alphabetical to by happiness score, manually label each country with
      # corresponding happiness score rank
    )
  ) +
  scale_linetype_manual(
    values = c(
      "Switzerland" = 1,
      "Iceland" = 2,
      "Denmark" = 3,
      "Norway" = 3,
      "Canada" = 4,
      "Rwanda" = 5,
      "Benin" = 6,
      "Syria" = 1,
      "Burundi" = 2,
      "Togo" = 3 # assign line type to each country
    ),
    labels = c(
      "Switzerland - Highest Happiness Score",
      "Iceland - Second Highest Happiness Score",
      "Denmark - Third Highest Happiness Score",
      "Norway - Fourth Highest Happiness Score",
      "Canada - Fifth Highest Happiness Score",
      "Rwanda - Fifth Lowest Happiness Score",
      "Benin - Fourth Lowest Happiness Score",
      "Syria - Third Lowest Happiness Score",
      "Burundi - Second Lowest Happiness Score",
      "Togo - Lowest Happiness Score" # change order of countries from
      # alphabetical to by happiness score, manually label each country with
      # corresponding happiness score rank
    )
  ) +
  ylim(0, 10) +
  labs(
    title = "Change in Happiness of Most and Least Happy Countries",
    x = "Year",
    y = "Happiness Score (0 - 10)",
    color = "Country",
    linetype = "Country" # add title, labels, legend titles
  ) +
  theme_bw() # add theme
```
  In @fig-finalhappinessovertimeplot, the axis is the year. The ticks on the x axis are 2015, 2016, 2017, 2018, and 2019, the range of the world happiness report data set [^1]. The y axis is the happiness score of each country in decimal form from zero to ten. The ticks on the y axis are zero, two and a half, five, seven and a half, and ten. Each line represents a country's change in happiness score from 2015 to 2019. Each line has been dual encoded with a color-blind friendly palette and line shape., with a legend on the right side of the graphic. The legend denotes which color and line type corresponds to each country. Moreover, the legends are ordered by and states where each country stood in their happiness score in 2015. Switzerland, in long dashed light blue, had the highest happiness score in 2015. Iceland, in long dashed red, has the second highest happiness score. Denmark, in short dashed yellow, had the third highest happiness score. Norway, in short dashed green, had the fourth highest happiness score. Canda, in short dashed purple, had the fifth highest happiness score. Rwanda in long dashed pink, has the fifth lowest happiness score. Benin in medium dashed sea foam, has the fourth lowest happiness score. Syria, in solid gold, has the third lowest happiness score. Burundi, in medium dashed dark pink, had the second lowest happiness score. Togo, in short dashed dark red, had the lowest happiness score. The top five countries, or the top five happiest countries in 2015, are tightly clustered around seven and a half, confirming stability. The summary table, @tbl-summaryvariablesworldhappiness, confirms this as the maximum happiness score is right around seven and a half. The bottom five countries, or the five least happiest countries in 2015, are also clustered around two and a half to four. The summary table, @tbl-summaryvariablesworldhappiness, confirms this as the minimum happiness score is right around two and a half. However, the outlier of Benin, the fourth lowest happiness score in 2015, shows strong improvement. Benin's happiness score, over 2015 to 2019, moved from around three to five, or two whole ladder rungs. So, Benin teaches us that governments and individuals can undertake actions to better society. An interesting area of further research would be to examine features outside our data set to investigate how their ranking increased so quickly. Since this is a four-to-five-year period, there could have been a change in regime in the government leading to this score change. Moreover, the world happiness report [^1] itself could have influenced Benin to change their current policies. This conclusion generalizes to all of the countries who were the least happy in 2015, as all show score improvement over the short range of four years. This upward trend cannot be mistaken for complacency as the gap between the top five and bottom five countries in 2019 is still large. The highest happiness score of the bottom five countries, Benin with around a five, is still two full rungs away from the top five happiness scores, around seven and a half. Overall, we can argue there is consistency among the scores, as the happiest countries' scores remained high and the least happiest countries' scores remained comparatively low. Since these happiness scores are fairly consistent, the survey must be measuring similar features every year. If the scores were extremely variable, that introduces concerns of inconsistency and incorrect collection. Arguable, the scores remain consistent, as there is not a way to radically change an entire country in four years. If these trends persisted over fifty years, for example, that trend is much stronger. Or, the argument can be made that staying happy and having a high quality of life is much easier than gaining a high happiness score.

## Visualization Two - Frequency Table of Happiness Scores and Region

```{r}
## Visualization Two - Frequency Table of Happiness Scores and Region


# Goal: Create a frequency table of the binned happiness scores against each
# region. The scores should be binned, as they are currently in decimal
# form, therefore generalizing them will allow for greater comparison power.

# Polishing: We initially had the happiness score binned into whole numbers
# as opposed to binning by decimals. This did not allow for enough
# differentiation between scores and generalized the data too much.

# Need: tidied world happiness index data

# Plan
# 1a. Reform world happiness index data so it can be used to create a
# frequency table
# 1b. Bin the happiness score in the world happiness index data (going by
# 0.5 stop inclusive, from 0 - 10)
# 1c. Drop any rows in the data set where the country region is unknown, as
# meant to be comparing across regions
# 2a. Create region and happiness score world happiness index relative
# frequency table
# 2b. Call tabyl function with region as row and happiness score as column
# 2e. Add marginal totals
# 2f. Add percentages
# 2g. Set decimals to two places
# 2h. Add row and column titles
# 3a. Polish region and happiness score relative frequency table
# 3b. Put percentages for each cell in parentheses
# 3c. Add commas to numbers over nine hundred and ninety nine
# 3d. Add counts
# 4a. Add title and kableExtra for styling

# 1a. Reform world happiness index data so it can be used to create a
# frequency table
# 1b. Bin the happiness score in the world happiness index data (going by
# 0.5 stop inclusive, from 0 - 10)
# 1c. Drop any rows in the data set where the country region is unknown, as
# meant to be comparing across regions
world_happiness_summary_region <-
  tidy_world_happiness |>
  mutate(
    binned.happiness.score = case_when(
      Happiness.Score <= 0.5 ~ "0 - 0.5",
      Happiness.Score > 0.5 & Happiness.Score <= 1 ~ "0.5 - 1",
      Happiness.Score > 1 & Happiness.Score <= 1.5 ~ "1 - 1.5",
      Happiness.Score > 1.5 & Happiness.Score <= 2 ~ "1.5 - 2",
      Happiness.Score > 2 & Happiness.Score <= 2.5 ~ "2 - 2.5",
      Happiness.Score > 2.5 & Happiness.Score <= 3 ~ "2.5 - 3",
      Happiness.Score > 3 & Happiness.Score <= 3.5 ~ "3 - 3.5",
      Happiness.Score > 3.5 & Happiness.Score <= 4 ~ "3.5 - 4",
      Happiness.Score > 4 & Happiness.Score <= 4.5 ~ "4 - 4.5",
      Happiness.Score > 4.5 & Happiness.Score <= 5 ~ "4.5 - 5",
      Happiness.Score > 5 & Happiness.Score <= 5.5 ~ "5 - 5.5",
      Happiness.Score > 5.5 & Happiness.Score <= 6 ~ "5.5 - 6",
      Happiness.Score > 6 & Happiness.Score <= 6.5 ~ "6 - 6.5",
      Happiness.Score > 6.5 & Happiness.Score <= 7 ~ "6.5 - 7",
      Happiness.Score > 7 & Happiness.Score <= 7.5 ~ "7 - 7.5",
      Happiness.Score > 7.5 & Happiness.Score <= 8 ~ "7.5 - 8",
      Happiness.Score > 8 & Happiness.Score <= 8.5 ~ "8 - 8.5",
      Happiness.Score > 8.5 & Happiness.Score <= 9 ~ "8.5 - 9",
      Happiness.Score > 9 & Happiness.Score <= 9.5 ~ "9 - 9.5",
      Happiness.Score > 9.5 & Happiness.Score <= 10 ~ "9.5 - 10"
    ) # bin the happiness scores by 0.5, there is a small range of happiness
    # score values (from around 2.5 - 7.5) so binning by whole number means
    # generalizing the data so much that not a lot of meaningful conclusions
    # can be made
  ) |>
  drop_na(Region) # remove any rows where no region, as comparing region
# to happiness score
```

```{r}
# 2a. Create region and happiness score world happiness index relative
# frequency table
# 2b. Call tabyl function with region as row and happiness score as column
# 2e. Add marginal totals
# 2f. Add percentages
# 2g. Set decimals to two places
# 2h. Add row and column titles
world_happy_freq <-
  world_happiness_summary_region |>
  tabyl(
    Region, binned.happiness.score # create frequency table based on region
    # and binned happiness score (both categorical values)
  ) |>
  adorn_totals(
    where = c("row", "col")
  ) |>
  adorn_percentages(
    denominator = "all" # percentages relative to entire table
  ) |>
  adorn_pct_formatting(
    digits = 2 # limit decimals to two, shows enough detail without being
    # excessive
  ) |>
  adorn_title(
    placement = "combined",
    row_name = "Region",
    col_name = "Happiness Score" # add title to row/column
  )
```

```{r}
# 3a. Polish region and happiness score relative frequency table
# 3b. Put percentages for each cell in parentheses
# 3c. Add commas to numbers over nine hundred and ninety nine
# 3d. Add counts
formatNs <-
  attr(
    world_happy_freq, "core"
  ) |>
  adorn_totals(
    where = c("row", "col")
  ) |>
  mutate(
    across(
      where(is.numeric),
      ~ format(.x, big.mark = ",", na.rm = TRUE)
    ) # adding commas for numbers greater than 999
  )

world_happy_freq <- world_happy_freq |>
  adorn_ns(
    position = "front", ns = formatNs
  ) # add formatting from formatNs, postion front
```

```{r}
#| label: tbl-regionvhappinessscore
#| tbl-cap: "Region and Happiness Score Frequency Table"
#| tbl-pos: H
#| lst-label: lst-table1
#| lst-cap: "Code Chunk for Making Region/Happiness Freq Table"
# 4a. Add title and kableExtra for styling
world_happy_freq |>
  kable(
    caption = "Region and Happiness Score of Countires in the World Happiness Index 2015 - 2019",
    booktabs = TRUE,
    align = c("l", rep("c", 6))
  ) |>
  kableExtra::kable_styling(
    bootstrap_options = c("striped", "condensed"),
    font_size = 3 # add in kable styling
  )
```
  In @tbl-regionvhappinessscore, we created a frequency table as opposed to a table of summary statistics. Instead of obtaining measures of quantitative features, as we did in @tbl-summaryvariablesworldhappiness and @tbl-summaryworldbank, we grouped by two categorical attributes. Our columns represent the binned happiness score. Originally, the happiness score was a decimal, quantitative feature. However, frequency tables can only use categorical features. Moreover, every country probably has a slightly different decimal happiness score. For example, one country could have a happiness score of 3.3 and another country could have a happiness score of 3.4. If we had just grouped by the straight decimal value, there would be no ability to generalize our conclusions. But since the example happiness scores are so similar, grouping allows us to draw conclusions about the scores generally. Also, whenever we grouped the scores by whole numbers, like one to two and two to three, the measure was too generalized and without nuance. We decided to group by halves, as the groupings are more clear across regions. The rows of the frequency table represent each region from the world happiness report data set [^1]. We removed any countries that did not have a region attached. The bins start from two and a half to three, as the minimum value in this set was two and a half. The bins end at seven and a half to eight as the maximum value in this eight. The bins go from two and half to three inclusive, three to three and a half inclusive, three and a half to four inclusive, four to four and a half inclusive, four and a half to five inclusive, five to five and a half inclusive, five and a half to six inclusive, six to six and a half inclusive, six and a half to seven inclusive, seven to seven and a half inclusive, and seven and a half inclusive to eight inclusive. The number, or counts in each cell, is the absolute frequency. The percentage in each cell, as seen in the parentheses with a percentage label, is the relative frequency compared to the number of countries in the entire table. For example, in the row Eastern Asia and the column four and a half to five, the cell count indicates three countries in the Eastern Asia region had happiness scores in the range two and a half to three. The percentage, 0.39%, indicates that Eastern Asian countries with a happiness score between two and a half to three make up 0.39% of all the countries in the frequency table. There is a total row at the bottom, which denotes the total number of countries that fall into each happiness score bucket. For example, the value of six from the rows total and column two and half to three, means there were six countries in the tidy data set with a happiness score between two and a half and three. There is a total column, which denotes the total number of countries in each region. For example, the value of ten from the Australia and New Zealand row and total column, means there were ten countries in the tidy data set from the Australia and New Zealand region. As seen in @fig-finalhappinessovertimeplot, the top four happiest countries, Switzerland, Iceland, Denmark, and Norway, all belong to the Western European region. Canda, the fifth happiest country, belongs to the North American region. For the five lowest happiness scores, Rwanda, Benin, Burundi, and Togo, all belong to the Sub-Saharan Africa region. Syria, the third lowest happiness score, belongs to the Middle Eastern and North African region. The Australian and New Zealand region have one hundred percent of their countries in the seven to seven and a half happiness score, one bucket down from the maximum happiness score bucket. Also, Western Europe, which contains the top four happiest countries in @fig-finalhappinessovertimeplot, have around two thirds of their countries in the six and a half to eight happiness scores. They are the only region with any country, much less sixteen, in the highest buck of seven and a half to eight. This probably indicates that both regions are overall stable and strong, pointing to long established advantages like strong social support and GDP. The North American region and Canada, the fifth happiest country, follow this pattern with one hundred percent of their happiness scores in six and a half to seven and a half. In the Sub-Saharan African region, one fifth of their total countries are in the two and a half to three and half range for happiness scores. Also, there are no countries in the happiness range of six to eight. Four of the five least happy countries in @fig-finalhappinessovertimeplot, belong to the Sub-Saharan African region, which corroborates this finding. This points to persistent challenges of limited infrastructure, investments, political unrest, and general instability. Moreover, we argue when there is unrest in a neighboring country, that unrest will affect every country near it. Neighboring countries exchange natural resources, trade, and workers, unrest affects all these factors. In the Middle Eastern and North Africa region with Syria, the third lowest happiness score, there is a large range of happiness scores from three to seven and a half. However, except for the regions of Latin America and the Caribbean and the Middle east and Northern Africa, most regions cluster around a few happiness score buckets. This answers our research question of regions affecting happiness scores, as scores in each region are fairly consistent. Each region with countries with higher happiness scores, Australia and New Zealand and Western Europe, the other countries' scores clustered nearby. The region with countries with lower happiness scores, Sub-Saharan Africa, Australia, the other countries' scores clustered nearby. The long-term factors of GDP, governance, and infrastructure play a role in regions maintaining or losing stability.

## Visualization Three - Scatter plot of Happiness Score v Birth Rate

```{r}
## Visualization Three - Scatter plot of Happiness Score v Birth Rate


# Goal: Create a scatter plot of the birth rate versus the country's happiness score.

# Polishing: We added in a trend line between happiness score and birth rate
# to more clearly indicate the negative correlation. We added in a color
# gradient to dual encoding the fact that as birth rate increased, happiness
# score decreased.

# Need: merged data set of world happiness index data and world bank data

# Plan
# 1a. Create a scatter plot of birth rate versus the country's happiness
# score.
# 1b. Specify the wrangled data to be used, the x axis, the y
# axis, and what the color of each point is based on, the happiness score
# 1c. Specify aesthetic geometry, point
# 1d. Create a linear trend line with no confidence interval, set the color
# to black, and set the line width
# 1e. Add labels to the x axis, y axis, color, and the title, add black and
# white theme
```

```{r}
#| label: fig-finalbirthrateplot
#| fig-cap: "Happiness Score versus Birth Rate"
#| fig-alt: "Final Scatterplot of happiness score v birth rate"
#| lst-cap: "Code Chunk for Making Final Happiness Score v Birth Rate Figure"
#| fig-pos: H
#| fig-height: 5
# 1a. Create a scatter plot of birth rate versus the country's happiness
# score.
# 1b. Specify the wrangled data to be used, the x axis, the y
# axis, and what the color of each point is based on, the happiness score
# 1c. Specify aesthetic geometry, point
# 1d. Create a linear trend line with no confidence interval, set the color
# to black, and set the line width
# 1e. Add labels to the x axis, y axis, color, and the title, add black and
# white theme
ggplot(
  data = merged_data, # merged data of tidy happiness index and tidy world
  # bank, with rows where missing any features from world bank removed
  mapping = aes(
    x = birth.rate,
    y = Happiness.Score,
    color = Happiness.Score # plot of happiness score v birth rate, dural
    # encode happiness score by position and color gradient
  )
) +
  geom_point( # scatter plot
    size = 2
  ) +
  geom_smooth(
    method = lm, # add in linear trend line of happiness score as a function
    # of birth rate
    formula = y ~ x, # specify formula use
    se = FALSE, # no confident interval shadind
    colour = "#000000", # color line black
    linewidth = 2 # set line width
  ) +
  xlim(0, 50) + # ensure birth rate go from zero to fifty
  ylim(0, 10) + # ensure happiness score go from zero to ten
  labs(
    x = "Birth Rate (per 1,000 people)",
    y = "Happiness Score (0 - 10)",
    color = "Happiness Score",
    title = "Happiness Score v Birth Rate" # add in title, labels, and legend
    # title
  ) +
  theme_bw() # add in theme
```
  In @fig-finalbirthrateplot, the x axis represents the birth rate in the country, per one thousand people. This ranges from around five to around fifty per one thousand. The ticks on the x axis are zero, ten, twenty, thirty, forty, and fifty. The y axis represents the happiness score of that country as a decimal from zero to ten. The ticks on the y axis are zero two and a half, five, seven and a half, and ten. Each point represents a country's happiness score versus their birth rate per one thousand people. The graph does show a strong negative correlation between an increase in the birth rate and a decrease in happiness score, as shown in @fig-birthrateplot. As the birth rate increases, the happiness score changes from around five to seven to around three to five. These insights are dual encoded by the color gradient of the happiness score. The lighter blue colors represent higher happiness scores, and darker blue colors represent lower happiness scores. So, as the happiness score decreases, the color gradient becomes darker. Additionally, the black linear trend line represents the happiness score as a function of birth rate. The slope of this line is fairly severe, indicating as the birth rate increases, there is a large decrease in the happiness score. The trend of happiness score decreasing as birth rate increases is clearly seen by the gradient and trend line. As seen in @tbl-summaryworldbank, there is a large range, from a minimum of around six to a maximum of around forty-six. This is corroborated in the graphic, as the x axis, or birth rate, has a large range. There is a slight clustering of birth rates around ten to twenty and happiness scores above six. The birth rates above twenty have happiness scores in the range of three to six. The birth rate and happiness correlation could exist as an indicator of other developmental factors. As seen in @tbl-regionvhappinessscore, regions with universal secondary education and urbanized societies, like Australia and New Zealand or Western Europe, are the happiest. Moreover, these are the regions with a lower birth rate. On the other hand, regions with a higher birth rate have a lower happiness score. Also, these regions are dealing with issues of political instability and a less diverse economy.

## Conclusion

This project’s analysis of global happiness data reveals three critical insights:

1.  Happiness is Persistent Over Time:

    -   The happiest countries maintained their high scores with minimal fluctuations, while the least happy remained stagnant. Only a few exceptions, like Benin, showed meaningful improvement, suggesting that well-being is deeply tied to long-term structural factors like governance, economic stability, and social trust.

2.  Happiness is Persistent Over Regions:

    -   If one country in the region is stable and happy, then it is likely that other neighbors can learn from their success. However, if one country in the region is unstable, that opens up the potential for their instability to influence other countries in the region. As no country is an island, or dependent on trade from other countries, insulating a country from unstable neighbors is extremely hard. 

3.  Birth Rates and Happiness Are Strongly Linked

    -   Higher birth rates correlate with lower happiness, reflecting challenges like limited resources and gender inequality. However, wealth and policy can override this trend, as seen in Gulf States with moderate happiness despite higher birth rates.

In the end, we can come to the conclusion that happiness is not static, but meaningful change requires systematic investment and not just short-term fixes.

## References
[^1]: "World Happiness Report." www.kaggle.com, www.kaggle.com/datasets/unsdsn/world-happiness.

"World Happiness Report." www.kaggle.com, www.kaggle.com/datasets/unsdsn/world-happiness.

[^2]: González, Ariel. "World Bank World Development Indicators." Kaggle.com, 2022, www.kaggle.com/datasets/nicolasgonzalezmunoz/world-bank-world-development-indicators.

González, Ariel. "World Bank World Development Indicators." Kaggle.com, 2022, www.kaggle.com/datasets/nicolasgonzalezmunoz/world-bank-world-development-indicators.

## Code Appendix

```{r codeAppend, ref.label=knitr::all_labels(), echo=TRUE, eval=FALSE}
```
